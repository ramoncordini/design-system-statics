{"version":3,"names":[],"mappings":"","sources":["scielo-ds.js"],"sourcesContent":["/*!\n * ZeroClipboard\n * The ZeroClipboard library provides an easy way to copy text to the clipboard using an invisible Adobe Flash movie and a JavaScript interface\n * Copyright (c) 2009-2016 Jon Rohan, James M. Greene\n * Licensed MIT\n * http://zeroclipboard.org/\n * v2.4.0-beta.1\n */\n(function(window, undefined) {\n    //\"use strict\";\n    /**\n   * Store references to critically important global functions that may be\n   * overridden on certain web pages.\n   */\n    var _window = window, _document = _window.document, _navigator = _window.navigator, _setTimeout = _window.setTimeout, _clearTimeout = _window.clearTimeout, _setInterval = _window.setInterval, _clearInterval = _window.clearInterval, _getComputedStyle = _window.getComputedStyle, _encodeURIComponent = _window.encodeURIComponent, _ActiveXObject = _window.ActiveXObject, _Error = _window.Error, _parseInt = _window.Number.parseInt || _window.parseInt, _parseFloat = _window.Number.parseFloat || _window.parseFloat, _isNaN = _window.Number.isNaN || _window.isNaN, _now = _window.Date.now, _keys = _window.Object.keys, _hasOwn = _window.Object.prototype.hasOwnProperty, _slice = _window.Array.prototype.slice, _unwrap = function() {\n      var unwrapper = function(el) {\n        return el;\n      };\n      if (typeof _window.wrap === \"function\" && typeof _window.unwrap === \"function\") {\n        try {\n          var div = _document.createElement(\"div\");\n          var unwrappedDiv = _window.unwrap(div);\n          if (div.nodeType === 1 && unwrappedDiv && unwrappedDiv.nodeType === 1) {\n            unwrapper = _window.unwrap;\n          }\n        } catch (e) {}\n      }\n      return unwrapper;\n    }();\n    /**\n   * Convert an `arguments` object into an Array.\n   *\n   * @returns The arguments as an Array\n   * @private\n   */\n    var _args = function(argumentsObj) {\n      return _slice.call(argumentsObj, 0);\n    };\n    /**\n   * Shallow-copy the owned, enumerable properties of one object over to another, similar to jQuery's `$.extend`.\n   *\n   * @returns The target object, augmented\n   * @private\n   */\n    var _extend = function() {\n      var i, len, arg, prop, src, copy, args = _args(arguments), target = args[0] || {};\n      for (i = 1, len = args.length; i < len; i++) {\n        if ((arg = args[i]) != null) {\n          for (prop in arg) {\n            if (_hasOwn.call(arg, prop)) {\n              src = target[prop];\n              copy = arg[prop];\n              if (target !== copy && copy !== undefined) {\n                target[prop] = copy;\n              }\n            }\n          }\n        }\n      }\n      return target;\n    };\n    /**\n   * Return a deep copy of the source object or array.\n   *\n   * @returns Object or Array\n   * @private\n   */\n    var _deepCopy = function(source) {\n      var copy, i, len, prop;\n      if (typeof source !== \"object\" || source == null || typeof source.nodeType === \"number\") {\n        copy = source;\n      } else if (typeof source.length === \"number\") {\n        copy = [];\n        for (i = 0, len = source.length; i < len; i++) {\n          if (_hasOwn.call(source, i)) {\n            copy[i] = _deepCopy(source[i]);\n          }\n        }\n      } else {\n        copy = {};\n        for (prop in source) {\n          if (_hasOwn.call(source, prop)) {\n            copy[prop] = _deepCopy(source[prop]);\n          }\n        }\n      }\n      return copy;\n    };\n    /**\n   * Makes a shallow copy of `obj` (like `_extend`) but filters its properties based on a list of `keys` to keep.\n   * The inverse of `_omit`, mostly. The big difference is that these properties do NOT need to be enumerable to\n   * be kept.\n   *\n   * @returns A new filtered object.\n   * @private\n   */\n    var _pick = function(obj, keys) {\n      var newObj = {};\n      for (var i = 0, len = keys.length; i < len; i++) {\n        if (keys[i] in obj) {\n          newObj[keys[i]] = obj[keys[i]];\n        }\n      }\n      return newObj;\n    };\n    /**\n   * Makes a shallow copy of `obj` (like `_extend`) but filters its properties based on a list of `keys` to omit.\n   * The inverse of `_pick`.\n   *\n   * @returns A new filtered object.\n   * @private\n   */\n    var _omit = function(obj, keys) {\n      var newObj = {};\n      for (var prop in obj) {\n        if (keys.indexOf(prop) === -1) {\n          newObj[prop] = obj[prop];\n        }\n      }\n      return newObj;\n    };\n    /**\n   * Remove all owned, enumerable properties from an object.\n   *\n   * @returns The original object without its owned, enumerable properties.\n   * @private\n   */\n    var _deleteOwnProperties = function(obj) {\n      if (obj) {\n        for (var prop in obj) {\n          if (_hasOwn.call(obj, prop)) {\n            delete obj[prop];\n          }\n        }\n      }\n      return obj;\n    };\n    /**\n   * Determine if an element is contained within another element.\n   *\n   * @returns Boolean\n   * @private\n   */\n    var _containedBy = function(el, ancestorEl) {\n      if (el && el.nodeType === 1 && el.ownerDocument && ancestorEl && (ancestorEl.nodeType === 1 && ancestorEl.ownerDocument && ancestorEl.ownerDocument === el.ownerDocument || ancestorEl.nodeType === 9 && !ancestorEl.ownerDocument && ancestorEl === el.ownerDocument)) {\n        do {\n          if (el === ancestorEl) {\n            return true;\n          }\n          el = el.parentNode;\n        } while (el);\n      }\n      return false;\n    };\n    /**\n   * Get the URL path's parent directory.\n   *\n   * @returns String or `undefined`\n   * @private\n   */\n    var _getDirPathOfUrl = function(url) {\n      var dir;\n      if (typeof url === \"string\" && url) {\n        dir = url.split(\"#\")[0].split(\"?\")[0];\n        dir = url.slice(0, url.lastIndexOf(\"/\") + 1);\n      }\n      return dir;\n    };\n    /**\n   * Get the current script's URL by throwing an `Error` and analyzing it.\n   *\n   * @returns String or `undefined`\n   * @private\n   */\n    var _getCurrentScriptUrlFromErrorStack = function(stack) {\n      var url, matches;\n      if (typeof stack === \"string\" && stack) {\n        matches = stack.match(/^(?:|[^:@]*@|.+\\)@(?=http[s]?|file)|.+?\\s+(?: at |@)(?:[^:\\(]+ )*[\\(]?)((?:http[s]?|file):\\/\\/[\\/]?.+?\\/[^:\\)]*?)(?::\\d+)(?::\\d+)?/);\n        if (matches && matches[1]) {\n          url = matches[1];\n        } else {\n          matches = stack.match(/\\)@((?:http[s]?|file):\\/\\/[\\/]?.+?\\/[^:\\)]*?)(?::\\d+)(?::\\d+)?/);\n          if (matches && matches[1]) {\n            url = matches[1];\n          }\n        }\n      }\n      return url;\n    };\n    /**\n   * Get the current script's URL by throwing an `Error` and analyzing it.\n   *\n   * @returns String or `undefined`\n   * @private\n   */\n    var _getCurrentScriptUrlFromError = function() {\n      var url, err;\n      try {\n        throw new _Error();\n      } catch (e) {\n        err = e;\n      }\n      if (err) {\n        url = err.sourceURL || err.fileName || _getCurrentScriptUrlFromErrorStack(err.stack);\n      }\n      return url;\n    };\n    /**\n   * Get the current script's URL.\n   *\n   * @returns String or `undefined`\n   * @private\n   */\n    var _getCurrentScriptUrl = function() {\n      var jsPath, scripts, i;\n      if (_document.currentScript && (jsPath = _document.currentScript.src)) {\n        return jsPath;\n      }\n      scripts = _document.getElementsByTagName(\"script\");\n      if (scripts.length === 1) {\n        return scripts[0].src || undefined;\n      }\n      if (\"readyState\" in (scripts[0] || document.createElement(\"script\"))) {\n        for (i = scripts.length; i--; ) {\n          if (scripts[i].readyState === \"interactive\" && (jsPath = scripts[i].src)) {\n            return jsPath;\n          }\n        }\n      }\n      if (_document.readyState === \"loading\" && (jsPath = scripts[scripts.length - 1].src)) {\n        return jsPath;\n      }\n      if (jsPath = _getCurrentScriptUrlFromError()) {\n        return jsPath;\n      }\n      return undefined;\n    };\n    /**\n   * Get the unanimous parent directory of ALL script tags.\n   * If any script tags are either (a) inline or (b) from differing parent\n   * directories, this method must return `undefined`.\n   *\n   * @returns String or `undefined`\n   * @private\n   */\n    var _getUnanimousScriptParentDir = function() {\n      var i, jsDir, jsPath, scripts = _document.getElementsByTagName(\"script\");\n      for (i = scripts.length; i--; ) {\n        if (!(jsPath = scripts[i].src)) {\n          jsDir = null;\n          break;\n        }\n        jsPath = _getDirPathOfUrl(jsPath);\n        if (jsDir == null) {\n          jsDir = jsPath;\n        } else if (jsDir !== jsPath) {\n          jsDir = null;\n          break;\n        }\n      }\n      return jsDir || undefined;\n    };\n    /**\n   * Get the presumed location of the \"ZeroClipboard.swf\" file, based on the location\n   * of the executing JavaScript file (e.g. \"ZeroClipboard.js\", etc.).\n   *\n   * @returns String\n   * @private\n   */\n    var _getDefaultSwfPath = function() {\n      var jsDir = _getDirPathOfUrl(_getCurrentScriptUrl()) || _getUnanimousScriptParentDir() || \"\";\n      return jsDir + \"ZeroClipboard.swf\";\n    };\n    /**\n   * Is the client's operating system some version of Windows?\n   *\n   * @returns Boolean\n   * @private\n   */\n    var _isWindows = function() {\n      var isWindowsRegex = /win(dows|[\\s]?(nt|me|ce|xp|vista|[\\d]+))/i;\n      return !!_navigator && (isWindowsRegex.test(_navigator.appVersion || \"\") || isWindowsRegex.test(_navigator.platform || \"\") || (_navigator.userAgent || \"\").indexOf(\"Windows\") !== -1);\n    };\n    /**\n   * Keep track of if the page is framed (in an `iframe`). This can never change.\n   * @private\n   */\n    var _pageIsFramed = function() {\n      return _window.opener == null && (!!_window.top && _window != _window.top || !!_window.parent && _window != _window.parent);\n    }();\n    /**\n   * Keep track of if the page is XHTML (vs. HTML), which requires that everything\n   * be rendering in XML mode.\n   * @private\n   */\n    var _pageIsXhtml = _document.documentElement.nodeName === \"html\";\n    /**\n   * Keep track of the state of the Flash object.\n   * @private\n   */\n    var _flashState = {\n      bridge: null,\n      version: \"0.0.0\",\n      pluginType: \"unknown\",\n      sandboxed: null,\n      disabled: null,\n      outdated: null,\n      insecure: null,\n      unavailable: null,\n      degraded: null,\n      deactivated: null,\n      overdue: null,\n      ready: null\n    };\n    /**\n   * The minimum Flash Player version required to use ZeroClipboard completely.\n   * @readonly\n   * @private\n   */\n    var _minimumFlashVersion = \"11.0.0\";\n    /**\n   * The ZeroClipboard library version number, as reported by Flash, at the time the SWF was compiled.\n   */\n    var _zcSwfVersion;\n    /**\n   * Keep track of all event listener registrations.\n   * @private\n   */\n    var _handlers = {};\n    /**\n   * Keep track of the currently activated element.\n   * @private\n   */\n    var _currentElement;\n    /**\n   * Keep track of the element that was activated when a `copy` process started.\n   * @private\n   */\n    var _copyTarget;\n    /**\n   * Keep track of data for the pending clipboard transaction.\n   * @private\n   */\n    var _clipData = {};\n    /**\n   * Keep track of data formats for the pending clipboard transaction.\n   * @private\n   */\n    var _clipDataFormatMap = null;\n    /**\n   * Keep track of the Flash availability check timeout.\n   * @private\n   */\n    var _flashCheckTimeout = 0;\n    /**\n   * Keep track of SWF network errors interval polling.\n   * @private\n   */\n    var _swfFallbackCheckInterval = 0;\n    /**\n   * The `message` store for events\n   * @private\n   */\n    var _eventMessages = {\n      ready: \"Flash communication is established\",\n      error: {\n        \"flash-sandboxed\": \"Attempting to run Flash in a sandboxed iframe, which is impossible\",\n        \"flash-disabled\": \"Flash is disabled or not installed. May also be attempting to run Flash in a sandboxed iframe, which is impossible.\",\n        \"flash-outdated\": \"Flash is too outdated to support ZeroClipboard\",\n        \"flash-insecure\": \"Flash will be unable to communicate due to a protocol mismatch between your `swfPath` configuration and the page\",\n        \"flash-unavailable\": \"Flash is unable to communicate bidirectionally with JavaScript\",\n        \"flash-degraded\": \"Flash is unable to preserve data fidelity when communicating with JavaScript\",\n        \"flash-deactivated\": \"Flash is too outdated for your browser and/or is configured as click-to-activate.\\nThis may also mean that the ZeroClipboard SWF object could not be loaded, so please check your `swfPath` configuration and/or network connectivity.\\nMay also be attempting to run Flash in a sandboxed iframe, which is impossible.\",\n        \"flash-overdue\": \"Flash communication was established but NOT within the acceptable time limit\",\n        \"version-mismatch\": \"ZeroClipboard JS version number does not match ZeroClipboard SWF version number\",\n        \"clipboard-error\": \"At least one error was thrown while ZeroClipboard was attempting to inject your data into the clipboard\",\n        \"config-mismatch\": \"ZeroClipboard configuration does not match Flash's reality\",\n        \"swf-not-found\": \"The ZeroClipboard SWF object could not be loaded, so please check your `swfPath` configuration and/or network connectivity\",\n        \"browser-unsupported\": \"The browser does not support the required HTML DOM and JavaScript features\"\n      }\n    };\n    /**\n   * The `name`s of `error` events that can only occur is Flash has at least\n   * been able to load the SWF successfully.\n   * @private\n   */\n    var _errorsThatOnlyOccurAfterFlashLoads = [ \"flash-unavailable\", \"flash-degraded\", \"flash-overdue\", \"version-mismatch\", \"config-mismatch\", \"clipboard-error\" ];\n    /**\n   * The `name`s of `error` events that should likely result in the `_flashState`\n   * variable's property values being updated.\n   * @private\n   */\n    var _flashStateErrorNames = [ \"flash-sandboxed\", \"flash-disabled\", \"flash-outdated\", \"flash-insecure\", \"flash-unavailable\", \"flash-degraded\", \"flash-deactivated\", \"flash-overdue\" ];\n    /**\n   * A RegExp to match the `name` property of `error` events related to Flash.\n   * @private\n   */\n    var _flashStateErrorNameMatchingRegex = new RegExp(\"^flash-(\" + _flashStateErrorNames.map(function(errorName) {\n      return errorName.replace(/^flash-/, \"\");\n    }).join(\"|\") + \")$\");\n    /**\n   * A RegExp to match the `name` property of `error` events related to Flash,\n   * which is enabled.\n   * @private\n   */\n    var _flashStateEnabledErrorNameMatchingRegex = new RegExp(\"^flash-(\" + _flashStateErrorNames.filter(function(errorName) {\n      return errorName !== \"flash-disabled\";\n    }).map(function(errorName) {\n      return errorName.replace(/^flash-/, \"\");\n    }).join(\"|\") + \")$\");\n    /**\n   * ZeroClipboard configuration defaults for the Core module.\n   * @private\n   */\n    var _globalConfig = {\n      swfPath: _getDefaultSwfPath(),\n      trustedDomains: _window.location.host ? [ _window.location.host ] : [],\n      cacheBust: true,\n      forceEnhancedClipboard: false,\n      flashLoadTimeout: 3e4,\n      autoActivate: true,\n      bubbleEvents: true,\n      fixLineEndings: true,\n      containerId: \"global-zeroclipboard-html-bridge\",\n      containerClass: \"global-zeroclipboard-container\",\n      swfObjectId: \"global-zeroclipboard-flash-bridge\",\n      hoverClass: false,\n      activeClass: false,\n      forceHandCursor: false,\n      title: null,\n      zIndex: 999999999\n    };\n    /**\n   * The underlying implementation of `ZeroClipboard.config`.\n   * @private\n   */\n    var _config = function(options) {\n      if (typeof options === \"object\" && options && !(\"length\" in options)) {\n        _keys(options).forEach(function(prop) {\n          if (/^(?:forceHandCursor|title|zIndex|bubbleEvents|fixLineEndings)$/.test(prop)) {\n            _globalConfig[prop] = options[prop];\n          } else if (_flashState.bridge == null) {\n            if (prop === \"containerId\" || prop === \"swfObjectId\") {\n              if (_isValidHtml4Id(options[prop])) {\n                _globalConfig[prop] = options[prop];\n              } else {\n                throw new Error(\"The specified `\" + prop + \"` value is not valid as an HTML4 Element ID\");\n              }\n            } else {\n              _globalConfig[prop] = options[prop];\n            }\n          }\n        });\n      }\n      if (typeof options === \"string\" && options) {\n        if (_hasOwn.call(_globalConfig, options)) {\n          return _globalConfig[options];\n        }\n        return;\n      }\n      return _deepCopy(_globalConfig);\n    };\n    /**\n   * The underlying implementation of `ZeroClipboard.state`.\n   * @private\n   */\n    var _state = function() {\n      _detectSandbox();\n      return {\n        browser: _extend(_pick(_navigator, [ \"userAgent\", \"platform\", \"appName\", \"appVersion\" ]), {\n          isSupported: _isBrowserSupported()\n        }),\n        flash: _omit(_flashState, [ \"bridge\" ]),\n        zeroclipboard: {\n          version: ZeroClipboard.version,\n          config: ZeroClipboard.config()\n        }\n      };\n    };\n    /**\n   * Does this browser support all of the necessary DOM and JS features necessary?\n   * @private\n   */\n    var _isBrowserSupported = function() {\n      return !!(_document.addEventListener && _window.Object.keys && _window.Array.prototype.map);\n    };\n    /**\n   * The underlying implementation of `ZeroClipboard.isFlashUnusable`.\n   * @private\n   */\n    var _isFlashUnusable = function() {\n      return !!(_flashState.sandboxed || _flashState.disabled || _flashState.outdated || _flashState.unavailable || _flashState.degraded || _flashState.deactivated);\n    };\n    /**\n   * The underlying implementation of `ZeroClipboard.on`.\n   * @private\n   */\n    var _on = function(eventType, listener) {\n      var i, len, events, added = {};\n      if (typeof eventType === \"string\" && eventType) {\n        events = eventType.toLowerCase().split(/\\s+/);\n      } else if (typeof eventType === \"object\" && eventType && !(\"length\" in eventType) && typeof listener === \"undefined\") {\n        _keys(eventType).forEach(function(key) {\n          var listener = eventType[key];\n          if (typeof listener === \"function\") {\n            ZeroClipboard.on(key, listener);\n          }\n        });\n      }\n      if (events && events.length && listener) {\n        for (i = 0, len = events.length; i < len; i++) {\n          eventType = events[i].replace(/^on/, \"\");\n          added[eventType] = true;\n          if (!_handlers[eventType]) {\n            _handlers[eventType] = [];\n          }\n          _handlers[eventType].push(listener);\n        }\n        if (added.ready && _flashState.ready) {\n          ZeroClipboard.emit({\n            type: \"ready\"\n          });\n        }\n        if (added.error) {\n          if (!_isBrowserSupported()) {\n            ZeroClipboard.emit({\n              type: \"error\",\n              name: \"browser-unsupported\"\n            });\n          }\n          for (i = 0, len = _flashStateErrorNames.length; i < len; i++) {\n            if (_flashState[_flashStateErrorNames[i].replace(/^flash-/, \"\")] === true) {\n              ZeroClipboard.emit({\n                type: \"error\",\n                name: _flashStateErrorNames[i]\n              });\n              break;\n            }\n          }\n          if (_zcSwfVersion !== undefined && ZeroClipboard.version !== _zcSwfVersion) {\n            ZeroClipboard.emit({\n              type: \"error\",\n              name: \"version-mismatch\",\n              jsVersion: ZeroClipboard.version,\n              swfVersion: _zcSwfVersion\n            });\n          }\n        }\n      }\n      return ZeroClipboard;\n    };\n    /**\n   * The underlying implementation of `ZeroClipboard.off`.\n   * @private\n   */\n    var _off = function(eventType, listener) {\n      var i, len, foundIndex, events, perEventHandlers;\n      if (arguments.length === 0) {\n        events = _keys(_handlers);\n      } else if (typeof eventType === \"string\" && eventType) {\n        events = eventType.toLowerCase().split(/\\s+/);\n      } else if (typeof eventType === \"object\" && eventType && !(\"length\" in eventType) && typeof listener === \"undefined\") {\n        _keys(eventType).forEach(function(key) {\n          var listener = eventType[key];\n          if (typeof listener === \"function\") {\n            ZeroClipboard.off(key, listener);\n          }\n        });\n      }\n      if (events && events.length) {\n        for (i = 0, len = events.length; i < len; i++) {\n          eventType = events[i].replace(/^on/, \"\");\n          perEventHandlers = _handlers[eventType];\n          if (perEventHandlers && perEventHandlers.length) {\n            if (listener) {\n              foundIndex = perEventHandlers.indexOf(listener);\n              while (foundIndex !== -1) {\n                perEventHandlers.splice(foundIndex, 1);\n                foundIndex = perEventHandlers.indexOf(listener, foundIndex);\n              }\n            } else {\n              perEventHandlers.length = 0;\n            }\n          }\n        }\n      }\n      return ZeroClipboard;\n    };\n    /**\n   * The underlying implementation of `ZeroClipboard.handlers`.\n   * @private\n   */\n    var _listeners = function(eventType) {\n      var copy;\n      if (typeof eventType === \"string\" && eventType) {\n        copy = _deepCopy(_handlers[eventType]) || null;\n      } else {\n        copy = _deepCopy(_handlers);\n      }\n      return copy;\n    };\n    /**\n   * The underlying implementation of `ZeroClipboard.emit`.\n   * @private\n   */\n    var _emit = function(event) {\n      var eventCopy, returnVal, tmp;\n      event = _createEvent(event);\n      if (!event) {\n        return;\n      }\n      if (_preprocessEvent(event)) {\n        return;\n      }\n      if (event.type === \"ready\" && _flashState.overdue === true) {\n        return ZeroClipboard.emit({\n          type: \"error\",\n          name: \"flash-overdue\"\n        });\n      }\n      eventCopy = _extend({}, event);\n      _dispatchCallbacks.call(this, eventCopy);\n      if (event.type === \"copy\") {\n        tmp = _mapClipDataToFlash(_clipData);\n        returnVal = tmp.data;\n        _clipDataFormatMap = tmp.formatMap;\n      }\n      return returnVal;\n    };\n    /**\n   * Get the protocol of the configured SWF path.\n   * @private\n   */\n    var _getSwfPathProtocol = function() {\n      var swfPath = _globalConfig.swfPath || \"\", swfPathFirstTwoChars = swfPath.slice(0, 2), swfProtocol = swfPath.slice(0, swfPath.indexOf(\"://\") + 1);\n      return swfPathFirstTwoChars === \"\\\\\\\\\" ? \"file:\" : swfPathFirstTwoChars === \"//\" || swfProtocol === \"\" ? _window.location.protocol : swfProtocol;\n    };\n    /**\n   * The underlying implementation of `ZeroClipboard.create`.\n   * @private\n   */\n    var _create = function() {\n      var maxWait, swfProtocol, previousState = _flashState.sandboxed;\n      if (!_isBrowserSupported()) {\n        _flashState.ready = false;\n        ZeroClipboard.emit({\n          type: \"error\",\n          name: \"browser-unsupported\"\n        });\n        return;\n      }\n      _detectSandbox();\n      if (typeof _flashState.ready !== \"boolean\") {\n        _flashState.ready = false;\n      }\n      if (_flashState.sandboxed !== previousState && _flashState.sandboxed === true) {\n        _flashState.ready = false;\n        ZeroClipboard.emit({\n          type: \"error\",\n          name: \"flash-sandboxed\"\n        });\n      } else if (!ZeroClipboard.isFlashUnusable() && _flashState.bridge === null) {\n        swfProtocol = _getSwfPathProtocol();\n        if (swfProtocol && swfProtocol !== _window.location.protocol) {\n          ZeroClipboard.emit({\n            type: \"error\",\n            name: \"flash-insecure\"\n          });\n        } else {\n          maxWait = _globalConfig.flashLoadTimeout;\n          if (typeof maxWait === \"number\" && maxWait >= 0) {\n            _flashCheckTimeout = _setTimeout(function() {\n              if (typeof _flashState.deactivated !== \"boolean\") {\n                _flashState.deactivated = true;\n              }\n              if (_flashState.deactivated === true) {\n                ZeroClipboard.emit({\n                  type: \"error\",\n                  name: \"flash-deactivated\"\n                });\n              }\n            }, maxWait);\n          }\n          _flashState.overdue = false;\n          _embedSwf();\n        }\n      }\n    };\n    /**\n   * The underlying implementation of `ZeroClipboard.destroy`.\n   * @private\n   */\n    var _destroy = function() {\n      ZeroClipboard.clearData();\n      ZeroClipboard.blur();\n      ZeroClipboard.emit(\"destroy\");\n      _unembedSwf();\n      ZeroClipboard.off();\n    };\n    /**\n   * The underlying implementation of `ZeroClipboard.setData`.\n   * @private\n   */\n    var _setData = function(format, data) {\n      var dataObj;\n      if (typeof format === \"object\" && format && typeof data === \"undefined\") {\n        dataObj = format;\n        ZeroClipboard.clearData();\n      } else if (typeof format === \"string\" && format) {\n        dataObj = {};\n        dataObj[format] = data;\n      } else {\n        return;\n      }\n      for (var dataFormat in dataObj) {\n        if (typeof dataFormat === \"string\" && dataFormat && _hasOwn.call(dataObj, dataFormat) && typeof dataObj[dataFormat] === \"string\" && dataObj[dataFormat]) {\n          _clipData[dataFormat] = _fixLineEndings(dataObj[dataFormat]);\n        }\n      }\n    };\n    /**\n   * The underlying implementation of `ZeroClipboard.clearData`.\n   * @private\n   */\n    var _clearData = function(format) {\n      if (typeof format === \"undefined\") {\n        _deleteOwnProperties(_clipData);\n        _clipDataFormatMap = null;\n      } else if (typeof format === \"string\" && _hasOwn.call(_clipData, format)) {\n        delete _clipData[format];\n      }\n    };\n    /**\n   * The underlying implementation of `ZeroClipboard.getData`.\n   * @private\n   */\n    var _getData = function(format) {\n      if (typeof format === \"undefined\") {\n        return _deepCopy(_clipData);\n      } else if (typeof format === \"string\" && _hasOwn.call(_clipData, format)) {\n        return _clipData[format];\n      }\n    };\n    /**\n   * The underlying implementation of `ZeroClipboard.focus`/`ZeroClipboard.activate`.\n   * @private\n   */\n    var _focus = function(element) {\n      if (!(element && element.nodeType === 1)) {\n        return;\n      }\n      if (_currentElement) {\n        _removeClass(_currentElement, _globalConfig.activeClass);\n        if (_currentElement !== element) {\n          _removeClass(_currentElement, _globalConfig.hoverClass);\n        }\n      }\n      _currentElement = element;\n      _addClass(element, _globalConfig.hoverClass);\n      var newTitle = element.getAttribute(\"title\") || _globalConfig.title;\n      if (typeof newTitle === \"string\" && newTitle) {\n        var htmlBridge = _getHtmlBridge(_flashState.bridge);\n        if (htmlBridge) {\n          htmlBridge.setAttribute(\"title\", newTitle);\n        }\n      }\n      var useHandCursor = _globalConfig.forceHandCursor === true || _getStyle(element, \"cursor\") === \"pointer\";\n      _setHandCursor(useHandCursor);\n      _reposition();\n    };\n    /**\n   * The underlying implementation of `ZeroClipboard.blur`/`ZeroClipboard.deactivate`.\n   * @private\n   */\n    var _blur = function() {\n      var htmlBridge = _getHtmlBridge(_flashState.bridge);\n      if (htmlBridge) {\n        htmlBridge.removeAttribute(\"title\");\n        htmlBridge.style.left = \"0px\";\n        htmlBridge.style.top = \"-9999px\";\n        htmlBridge.style.width = \"1px\";\n        htmlBridge.style.height = \"1px\";\n      }\n      if (_currentElement) {\n        _removeClass(_currentElement, _globalConfig.hoverClass);\n        _removeClass(_currentElement, _globalConfig.activeClass);\n        _currentElement = null;\n      }\n    };\n    /**\n   * The underlying implementation of `ZeroClipboard.activeElement`.\n   * @private\n   */\n    var _activeElement = function() {\n      return _currentElement || null;\n    };\n    /**\n   * Check if a value is a valid HTML4 `ID` or `Name` token.\n   * @private\n   */\n    var _isValidHtml4Id = function(id) {\n      return typeof id === \"string\" && id && /^[A-Za-z][A-Za-z0-9_:\\-\\.]*$/.test(id);\n    };\n    /**\n   * Create or update an `event` object, based on the `eventType`.\n   * @private\n   */\n    var _createEvent = function(event) {\n      var eventType;\n      if (typeof event === \"string\" && event) {\n        eventType = event;\n        event = {};\n      } else if (typeof event === \"object\" && event && typeof event.type === \"string\" && event.type) {\n        eventType = event.type;\n      }\n      if (!eventType) {\n        return;\n      }\n      eventType = eventType.toLowerCase();\n      if (!event.target && (/^(copy|aftercopy|_click)$/.test(eventType) || eventType === \"error\" && event.name === \"clipboard-error\")) {\n        event.target = _copyTarget;\n      }\n      _extend(event, {\n        type: eventType,\n        target: event.target || _currentElement || null,\n        relatedTarget: event.relatedTarget || null,\n        currentTarget: _flashState && _flashState.bridge || null,\n        timeStamp: event.timeStamp || _now() || null\n      });\n      var msg = _eventMessages[event.type];\n      if (event.type === \"error\" && event.name && msg) {\n        msg = msg[event.name];\n      }\n      if (msg) {\n        event.message = msg;\n      }\n      if (event.type === \"ready\") {\n        _extend(event, {\n          target: null,\n          version: _flashState.version\n        });\n      }\n      if (event.type === \"error\") {\n        if (_flashStateErrorNameMatchingRegex.test(event.name)) {\n          _extend(event, {\n            target: null,\n            minimumVersion: _minimumFlashVersion\n          });\n        }\n        if (_flashStateEnabledErrorNameMatchingRegex.test(event.name)) {\n          _extend(event, {\n            version: _flashState.version\n          });\n        }\n        if (event.name === \"flash-insecure\") {\n          _extend(event, {\n            pageProtocol: _window.location.protocol,\n            swfProtocol: _getSwfPathProtocol()\n          });\n        }\n      }\n      if (event.type === \"copy\") {\n        event.clipboardData = {\n          setData: ZeroClipboard.setData,\n          clearData: ZeroClipboard.clearData\n        };\n      }\n      if (event.type === \"aftercopy\") {\n        event = _mapClipResultsFromFlash(event, _clipDataFormatMap);\n      }\n      if (event.target && !event.relatedTarget) {\n        event.relatedTarget = _getRelatedTarget(event.target);\n      }\n      return _addMouseData(event);\n    };\n    /**\n   * Get a relatedTarget from the target's `data-clipboard-target` attribute\n   * @private\n   */\n    var _getRelatedTarget = function(targetEl) {\n      var relatedTargetId = targetEl && targetEl.getAttribute && targetEl.getAttribute(\"data-clipboard-target\");\n      return relatedTargetId ? _document.getElementById(relatedTargetId) : null;\n    };\n    /**\n   * Add element and position data to `MouseEvent` instances\n   * @private\n   */\n    var _addMouseData = function(event) {\n      if (event && /^_(?:click|mouse(?:over|out|down|up|move))$/.test(event.type)) {\n        var srcElement = event.target;\n        var fromElement = event.type === \"_mouseover\" && event.relatedTarget ? event.relatedTarget : undefined;\n        var toElement = event.type === \"_mouseout\" && event.relatedTarget ? event.relatedTarget : undefined;\n        var pos = _getElementPosition(srcElement);\n        var screenLeft = _window.screenLeft || _window.screenX || 0;\n        var screenTop = _window.screenTop || _window.screenY || 0;\n        var scrollLeft = _document.body.scrollLeft + _document.documentElement.scrollLeft;\n        var scrollTop = _document.body.scrollTop + _document.documentElement.scrollTop;\n        var pageX = pos.left + (typeof event._stageX === \"number\" ? event._stageX : 0);\n        var pageY = pos.top + (typeof event._stageY === \"number\" ? event._stageY : 0);\n        var clientX = pageX - scrollLeft;\n        var clientY = pageY - scrollTop;\n        var screenX = screenLeft + clientX;\n        var screenY = screenTop + clientY;\n        var moveX = typeof event.movementX === \"number\" ? event.movementX : 0;\n        var moveY = typeof event.movementY === \"number\" ? event.movementY : 0;\n        delete event._stageX;\n        delete event._stageY;\n        _extend(event, {\n          srcElement: srcElement,\n          fromElement: fromElement,\n          toElement: toElement,\n          screenX: screenX,\n          screenY: screenY,\n          pageX: pageX,\n          pageY: pageY,\n          clientX: clientX,\n          clientY: clientY,\n          x: clientX,\n          y: clientY,\n          movementX: moveX,\n          movementY: moveY,\n          offsetX: 0,\n          offsetY: 0,\n          layerX: 0,\n          layerY: 0\n        });\n      }\n      return event;\n    };\n    /**\n   * Determine if an event's registered handlers should be execute synchronously or asynchronously.\n   *\n   * @returns {boolean}\n   * @private\n   */\n    var _shouldPerformAsync = function(event) {\n      var eventType = event && typeof event.type === \"string\" && event.type || \"\";\n      return !/^(?:(?:before)?copy|destroy)$/.test(eventType);\n    };\n    /**\n   * Control if a callback should be executed asynchronously or not.\n   *\n   * @returns `undefined`\n   * @private\n   */\n    var _dispatchCallback = function(func, context, args, async) {\n      if (async) {\n        _setTimeout(function() {\n          func.apply(context, args);\n        }, 0);\n      } else {\n        func.apply(context, args);\n      }\n    };\n    /**\n   * Handle the actual dispatching of events to client instances.\n   *\n   * @returns `undefined`\n   * @private\n   */\n    var _dispatchCallbacks = function(event) {\n      if (!(typeof event === \"object\" && event && event.type)) {\n        return;\n      }\n      var async = _shouldPerformAsync(event);\n      var wildcardTypeHandlers = _handlers[\"*\"] || [];\n      var specificTypeHandlers = _handlers[event.type] || [];\n      var handlers = wildcardTypeHandlers.concat(specificTypeHandlers);\n      if (handlers && handlers.length) {\n        var i, len, func, context, eventCopy, originalContext = this;\n        for (i = 0, len = handlers.length; i < len; i++) {\n          func = handlers[i];\n          context = originalContext;\n          if (typeof func === \"string\" && typeof _window[func] === \"function\") {\n            func = _window[func];\n          }\n          if (typeof func === \"object\" && func && typeof func.handleEvent === \"function\") {\n            context = func;\n            func = func.handleEvent;\n          }\n          if (typeof func === \"function\") {\n            eventCopy = _extend({}, event);\n            _dispatchCallback(func, context, [ eventCopy ], async);\n          }\n        }\n      }\n      return this;\n    };\n    /**\n   * Check an `error` event's `name` property to see if Flash has\n   * already loaded, which rules out possible `iframe` sandboxing.\n   * @private\n   */\n    var _getSandboxStatusFromErrorEvent = function(event) {\n      var isSandboxed = null;\n      if (_pageIsFramed === false || event && event.type === \"error\" && event.name && _errorsThatOnlyOccurAfterFlashLoads.indexOf(event.name) !== -1) {\n        isSandboxed = false;\n      }\n      return isSandboxed;\n    };\n    /**\n   * Preprocess any special behaviors, reactions, or state changes after receiving this event.\n   * Executes only once per event emitted, NOT once per client.\n   * @private\n   */\n    var _preprocessEvent = function(event) {\n      var element = event.target || _currentElement || null;\n      var sourceIsSwf = event._source === \"swf\";\n      delete event._source;\n      switch (event.type) {\n       case \"error\":\n        var isSandboxed = event.name === \"flash-sandboxed\" || _getSandboxStatusFromErrorEvent(event);\n        if (typeof isSandboxed === \"boolean\") {\n          _flashState.sandboxed = isSandboxed;\n        }\n        if (event.name === \"browser-unsupported\") {\n          _extend(_flashState, {\n            disabled: false,\n            outdated: false,\n            unavailable: false,\n            degraded: false,\n            deactivated: false,\n            overdue: false,\n            ready: false\n          });\n        } else if (_flashStateErrorNames.indexOf(event.name) !== -1) {\n          _extend(_flashState, {\n            disabled: event.name === \"flash-disabled\",\n            outdated: event.name === \"flash-outdated\",\n            insecure: event.name === \"flash-insecure\",\n            unavailable: event.name === \"flash-unavailable\",\n            degraded: event.name === \"flash-degraded\",\n            deactivated: event.name === \"flash-deactivated\",\n            overdue: event.name === \"flash-overdue\",\n            ready: false\n          });\n        } else if (event.name === \"version-mismatch\") {\n          _zcSwfVersion = event.swfVersion;\n          _extend(_flashState, {\n            disabled: false,\n            outdated: false,\n            insecure: false,\n            unavailable: false,\n            degraded: false,\n            deactivated: false,\n            overdue: false,\n            ready: false\n          });\n        }\n        _clearTimeoutsAndPolling();\n        break;\n  \n       case \"ready\":\n        _zcSwfVersion = event.swfVersion;\n        var wasDeactivated = _flashState.deactivated === true;\n        _extend(_flashState, {\n          sandboxed: false,\n          disabled: false,\n          outdated: false,\n          insecure: false,\n          unavailable: false,\n          degraded: false,\n          deactivated: false,\n          overdue: wasDeactivated,\n          ready: !wasDeactivated\n        });\n        _clearTimeoutsAndPolling();\n        break;\n  \n       case \"beforecopy\":\n        _copyTarget = element;\n        break;\n  \n       case \"copy\":\n        var textContent, htmlContent, targetEl = event.relatedTarget;\n        if (!(_clipData[\"text/html\"] || _clipData[\"text/plain\"]) && targetEl && (htmlContent = targetEl.value || targetEl.outerHTML || targetEl.innerHTML) && (textContent = targetEl.value || targetEl.textContent || targetEl.innerText)) {\n          event.clipboardData.clearData();\n          event.clipboardData.setData(\"text/plain\", textContent);\n          if (htmlContent !== textContent) {\n            event.clipboardData.setData(\"text/html\", htmlContent);\n          }\n        } else if (!_clipData[\"text/plain\"] && event.target && (textContent = event.target.getAttribute(\"data-clipboard-text\"))) {\n          event.clipboardData.clearData();\n          event.clipboardData.setData(\"text/plain\", textContent);\n        }\n        break;\n  \n       case \"aftercopy\":\n        _queueEmitClipboardErrors(event);\n        ZeroClipboard.clearData();\n        if (element && element !== _safeActiveElement() && element.focus) {\n          element.focus();\n        }\n        break;\n  \n       case \"_mouseover\":\n        ZeroClipboard.focus(element);\n        if (_globalConfig.bubbleEvents === true && sourceIsSwf) {\n          if (element && element !== event.relatedTarget && !_containedBy(event.relatedTarget, element)) {\n            _fireMouseEvent(_extend({}, event, {\n              type: \"mouseenter\",\n              bubbles: false,\n              cancelable: false\n            }));\n          }\n          _fireMouseEvent(_extend({}, event, {\n            type: \"mouseover\"\n          }));\n        }\n        break;\n  \n       case \"_mouseout\":\n        ZeroClipboard.blur();\n        if (_globalConfig.bubbleEvents === true && sourceIsSwf) {\n          if (element && element !== event.relatedTarget && !_containedBy(event.relatedTarget, element)) {\n            _fireMouseEvent(_extend({}, event, {\n              type: \"mouseleave\",\n              bubbles: false,\n              cancelable: false\n            }));\n          }\n          _fireMouseEvent(_extend({}, event, {\n            type: \"mouseout\"\n          }));\n        }\n        break;\n  \n       case \"_mousedown\":\n        _addClass(element, _globalConfig.activeClass);\n        if (_globalConfig.bubbleEvents === true && sourceIsSwf) {\n          _fireMouseEvent(_extend({}, event, {\n            type: event.type.slice(1)\n          }));\n        }\n        break;\n  \n       case \"_mouseup\":\n        _removeClass(element, _globalConfig.activeClass);\n        if (_globalConfig.bubbleEvents === true && sourceIsSwf) {\n          _fireMouseEvent(_extend({}, event, {\n            type: event.type.slice(1)\n          }));\n        }\n        break;\n  \n       case \"_click\":\n        _copyTarget = null;\n        if (_globalConfig.bubbleEvents === true && sourceIsSwf) {\n          _fireMouseEvent(_extend({}, event, {\n            type: event.type.slice(1)\n          }));\n        }\n        break;\n  \n       case \"_mousemove\":\n        if (_globalConfig.bubbleEvents === true && sourceIsSwf) {\n          _fireMouseEvent(_extend({}, event, {\n            type: event.type.slice(1)\n          }));\n        }\n        break;\n      }\n      if (/^_(?:click|mouse(?:over|out|down|up|move))$/.test(event.type)) {\n        return true;\n      }\n    };\n    /**\n   * Check an \"aftercopy\" event for clipboard errors and emit a corresponding \"error\" event.\n   * @private\n   */\n    var _queueEmitClipboardErrors = function(aftercopyEvent) {\n      if (aftercopyEvent.errors && aftercopyEvent.errors.length > 0) {\n        var errorEvent = _deepCopy(aftercopyEvent);\n        _extend(errorEvent, {\n          type: \"error\",\n          name: \"clipboard-error\"\n        });\n        delete errorEvent.success;\n        _setTimeout(function() {\n          ZeroClipboard.emit(errorEvent);\n        }, 0);\n      }\n    };\n    /**\n   * Dispatch a synthetic MouseEvent.\n   *\n   * @returns `undefined`\n   * @private\n   */\n    var _fireMouseEvent = function(event) {\n      if (!(event && typeof event.type === \"string\" && event)) {\n        return;\n      }\n      var e, target = event.target || null, doc = target && target.ownerDocument || _document, defaults = {\n        view: doc.defaultView || _window,\n        canBubble: true,\n        cancelable: true,\n        detail: event.type === \"click\" ? 1 : 0,\n        button: typeof event.which === \"number\" ? event.which - 1 : typeof event.button === \"number\" ? event.button : doc.createEvent ? 0 : 1\n      }, args = _extend(defaults, event);\n      if (!target) {\n        return;\n      }\n      if (doc.createEvent && target.dispatchEvent) {\n        args = [ args.type, args.canBubble, args.cancelable, args.view, args.detail, args.screenX, args.screenY, args.clientX, args.clientY, args.ctrlKey, args.altKey, args.shiftKey, args.metaKey, args.button, args.relatedTarget ];\n        e = doc.createEvent(\"MouseEvents\");\n        if (e.initMouseEvent) {\n          e.initMouseEvent.apply(e, args);\n          e._source = \"js\";\n          target.dispatchEvent(e);\n        }\n      }\n    };\n    /**\n   * Continuously poll the DOM until either:\n   *  (a) the fallback content becomes visible, or\n   *  (b) we receive an event from SWF (handled elsewhere)\n   *\n   * IMPORTANT:\n   * This is NOT a necessary check but it can result in significantly faster\n   * detection of bad `swfPath` configuration and/or network/server issues [in\n   * supported browsers] than waiting for the entire `flashLoadTimeout` duration\n   * to elapse before detecting that the SWF cannot be loaded. The detection\n   * duration can be anywhere from 10-30 times faster [in supported browsers] by\n   * using this approach.\n   *\n   * @returns `undefined`\n   * @private\n   */\n    var _watchForSwfFallbackContent = function() {\n      var maxWait = _globalConfig.flashLoadTimeout;\n      if (typeof maxWait === \"number\" && maxWait >= 0) {\n        var pollWait = Math.min(1e3, maxWait / 10);\n        var fallbackContentId = _globalConfig.swfObjectId + \"_fallbackContent\";\n        _swfFallbackCheckInterval = _setInterval(function() {\n          var el = _document.getElementById(fallbackContentId);\n          if (_isElementVisible(el)) {\n            _clearTimeoutsAndPolling();\n            _flashState.deactivated = null;\n            ZeroClipboard.emit({\n              type: \"error\",\n              name: \"swf-not-found\"\n            });\n          }\n        }, pollWait);\n      }\n    };\n    /**\n   * Create the HTML bridge element to embed the Flash object into.\n   * @private\n   */\n    var _createHtmlBridge = function() {\n      var container = _document.createElement(\"div\");\n      container.id = _globalConfig.containerId;\n      container.className = _globalConfig.containerClass;\n      container.style.position = \"absolute\";\n      container.style.left = \"0px\";\n      container.style.top = \"-9999px\";\n      container.style.width = \"1px\";\n      container.style.height = \"1px\";\n      container.style.zIndex = \"\" + _getSafeZIndex(_globalConfig.zIndex);\n      return container;\n    };\n    /**\n   * Get the HTML element container that wraps the Flash bridge object/element.\n   * @private\n   */\n    var _getHtmlBridge = function(flashBridge) {\n      var htmlBridge = flashBridge && flashBridge.parentNode;\n      while (htmlBridge && htmlBridge.nodeName === \"OBJECT\" && htmlBridge.parentNode) {\n        htmlBridge = htmlBridge.parentNode;\n      }\n      return htmlBridge || null;\n    };\n    /**\n   *\n   * @private\n   */\n    var _escapeXmlValue = function(val) {\n      if (typeof val !== \"string\" || !val) {\n        return val;\n      }\n      return val.replace(/[\"&'<>]/g, function(chr) {\n        switch (chr) {\n         case '\"':\n          return \"&quot;\";\n  \n         case \"&\":\n          return \"&amp;\";\n  \n         case \"'\":\n          return \"&apos;\";\n  \n         case \"<\":\n          return \"&lt;\";\n  \n         case \">\":\n          return \"&gt;\";\n  \n         default:\n          return chr;\n        }\n      });\n    };\n    /**\n   * Create the SWF object.\n   *\n   * @returns The SWF object reference.\n   * @private\n   */\n    var _embedSwf = function() {\n      var len, flashBridge = _flashState.bridge, container = _getHtmlBridge(flashBridge);\n      if (!flashBridge) {\n        var allowScriptAccess = _determineScriptAccess(_window.location.host, _globalConfig);\n        var allowNetworking = allowScriptAccess === \"never\" ? \"none\" : \"all\";\n        var flashvars = _vars(_extend({\n          jsVersion: ZeroClipboard.version\n        }, _globalConfig));\n        var swfUrl = _globalConfig.swfPath + _cacheBust(_globalConfig.swfPath, _globalConfig);\n        if (_pageIsXhtml) {\n          swfUrl = _escapeXmlValue(swfUrl);\n        }\n        container = _createHtmlBridge();\n        var divToBeReplaced = _document.createElement(\"div\");\n        container.appendChild(divToBeReplaced);\n        _document.body.appendChild(container);\n        var tmpDiv = _document.createElement(\"div\");\n        var usingActiveX = _flashState.pluginType === \"activex\";\n        tmpDiv.innerHTML = '<object id=\"' + _globalConfig.swfObjectId + '\" name=\"' + _globalConfig.swfObjectId + '\" ' + 'width=\"100%\" height=\"100%\" ' + (usingActiveX ? 'classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\"' : 'type=\"application/x-shockwave-flash\" data=\"' + swfUrl + '\"') + \">\" + (usingActiveX ? '<param name=\"movie\" value=\"' + swfUrl + '\"/>' : \"\") + '<param name=\"allowScriptAccess\" value=\"' + allowScriptAccess + '\"/>' + '<param name=\"allowNetworking\" value=\"' + allowNetworking + '\"/>' + '<param name=\"menu\" value=\"false\"/>' + '<param name=\"wmode\" value=\"transparent\"/>' + '<param name=\"flashvars\" value=\"' + flashvars + '\"/>' + '<div id=\"' + _globalConfig.swfObjectId + '_fallbackContent\">&nbsp;</div>' + \"</object>\";\n        flashBridge = tmpDiv.firstChild;\n        tmpDiv = null;\n        _unwrap(flashBridge).ZeroClipboard = ZeroClipboard;\n        container.replaceChild(flashBridge, divToBeReplaced);\n        _watchForSwfFallbackContent();\n      }\n      if (!flashBridge) {\n        flashBridge = _document[_globalConfig.swfObjectId];\n        if (flashBridge && (len = flashBridge.length)) {\n          flashBridge = flashBridge[len - 1];\n        }\n        if (!flashBridge && container) {\n          flashBridge = container.firstChild;\n        }\n      }\n      _flashState.bridge = flashBridge || null;\n      return flashBridge;\n    };\n    /**\n   * Destroy the SWF object.\n   * @private\n   */\n    var _unembedSwf = function() {\n      var flashBridge = _flashState.bridge;\n      if (flashBridge) {\n        var htmlBridge = _getHtmlBridge(flashBridge);\n        if (htmlBridge) {\n          if (_flashState.pluginType === \"activex\" && \"readyState\" in flashBridge) {\n            flashBridge.style.display = \"none\";\n            (function removeSwfFromIE() {\n              if (flashBridge.readyState === 4) {\n                for (var prop in flashBridge) {\n                  if (typeof flashBridge[prop] === \"function\") {\n                    flashBridge[prop] = null;\n                  }\n                }\n                if (flashBridge.parentNode) {\n                  flashBridge.parentNode.removeChild(flashBridge);\n                }\n                if (htmlBridge.parentNode) {\n                  htmlBridge.parentNode.removeChild(htmlBridge);\n                }\n              } else {\n                _setTimeout(removeSwfFromIE, 10);\n              }\n            })();\n          } else {\n            if (flashBridge.parentNode) {\n              flashBridge.parentNode.removeChild(flashBridge);\n            }\n            if (htmlBridge.parentNode) {\n              htmlBridge.parentNode.removeChild(htmlBridge);\n            }\n          }\n        }\n        _clearTimeoutsAndPolling();\n        _flashState.ready = null;\n        _flashState.bridge = null;\n        _flashState.deactivated = null;\n        _flashState.insecure = null;\n        _zcSwfVersion = undefined;\n      }\n    };\n    /**\n   * Map the data format names of the \"clipData\" to Flash-friendly names.\n   *\n   * @returns A new transformed object.\n   * @private\n   */\n    var _mapClipDataToFlash = function(clipData) {\n      var newClipData = {}, formatMap = {};\n      if (!(typeof clipData === \"object\" && clipData)) {\n        return;\n      }\n      for (var dataFormat in clipData) {\n        if (dataFormat && _hasOwn.call(clipData, dataFormat) && typeof clipData[dataFormat] === \"string\" && clipData[dataFormat]) {\n          switch (dataFormat.toLowerCase()) {\n           case \"text/plain\":\n           case \"text\":\n           case \"air:text\":\n           case \"flash:text\":\n            newClipData.text = clipData[dataFormat];\n            formatMap.text = dataFormat;\n            break;\n  \n           case \"text/html\":\n           case \"html\":\n           case \"air:html\":\n           case \"flash:html\":\n            newClipData.html = clipData[dataFormat];\n            formatMap.html = dataFormat;\n            break;\n  \n           case \"application/rtf\":\n           case \"text/rtf\":\n           case \"rtf\":\n           case \"richtext\":\n           case \"air:rtf\":\n           case \"flash:rtf\":\n            newClipData.rtf = clipData[dataFormat];\n            formatMap.rtf = dataFormat;\n            break;\n  \n           default:\n            break;\n          }\n        }\n      }\n      return {\n        data: newClipData,\n        formatMap: formatMap\n      };\n    };\n    /**\n   * Map the data format names from Flash-friendly names back to their original \"clipData\" names (via a format mapping).\n   *\n   * @returns A new transformed object.\n   * @private\n   */\n    var _mapClipResultsFromFlash = function(clipResults, formatMap) {\n      if (!(typeof clipResults === \"object\" && clipResults && typeof formatMap === \"object\" && formatMap)) {\n        return clipResults;\n      }\n      var newResults = {};\n      for (var prop in clipResults) {\n        if (_hasOwn.call(clipResults, prop)) {\n          if (prop === \"errors\") {\n            newResults[prop] = clipResults[prop] ? clipResults[prop].slice() : [];\n            for (var i = 0, len = newResults[prop].length; i < len; i++) {\n              newResults[prop][i].format = formatMap[newResults[prop][i].format];\n            }\n          } else if (prop !== \"success\" && prop !== \"data\") {\n            newResults[prop] = clipResults[prop];\n          } else {\n            newResults[prop] = {};\n            var tmpHash = clipResults[prop];\n            for (var dataFormat in tmpHash) {\n              if (dataFormat && _hasOwn.call(tmpHash, dataFormat) && _hasOwn.call(formatMap, dataFormat)) {\n                newResults[prop][formatMap[dataFormat]] = tmpHash[dataFormat];\n              }\n            }\n          }\n        }\n      }\n      return newResults;\n    };\n    /**\n   * Will look at a path, and will create a \"?noCache={time}\" or \"&noCache={time}\"\n   * query param string to return. Does NOT append that string to the original path.\n   * This is useful because ExternalInterface often breaks when a Flash SWF is cached.\n   *\n   * @returns The `noCache` query param with necessary \"?\"/\"&\" prefix.\n   * @private\n   */\n    var _cacheBust = function(path, options) {\n      var cacheBust = options == null || options && options.cacheBust === true;\n      if (cacheBust) {\n        return (path.indexOf(\"?\") === -1 ? \"?\" : \"&\") + \"noCache=\" + _now();\n      } else {\n        return \"\";\n      }\n    };\n    /**\n   * Creates a query string for the FlashVars param.\n   * Does NOT include the cache-busting query param.\n   *\n   * @returns FlashVars query string\n   * @private\n   */\n    var _vars = function(options) {\n      var i, len, domain, domains, str = \"\", trustedOriginsExpanded = [];\n      if (options.trustedDomains) {\n        if (typeof options.trustedDomains === \"string\") {\n          domains = [ options.trustedDomains ];\n        } else if (typeof options.trustedDomains === \"object\" && \"length\" in options.trustedDomains) {\n          domains = options.trustedDomains;\n        }\n      }\n      if (domains && domains.length) {\n        for (i = 0, len = domains.length; i < len; i++) {\n          if (_hasOwn.call(domains, i) && domains[i] && typeof domains[i] === \"string\") {\n            domain = _extractDomain(domains[i]);\n            if (!domain) {\n              continue;\n            }\n            if (domain === \"*\") {\n              trustedOriginsExpanded.length = 0;\n              trustedOriginsExpanded.push(domain);\n              break;\n            }\n            trustedOriginsExpanded.push.apply(trustedOriginsExpanded, [ domain, \"//\" + domain, _window.location.protocol + \"//\" + domain ]);\n          }\n        }\n      }\n      if (trustedOriginsExpanded.length) {\n        str += \"trustedOrigins=\" + _encodeURIComponent(trustedOriginsExpanded.join(\",\"));\n      }\n      if (options.forceEnhancedClipboard === true) {\n        str += (str ? \"&\" : \"\") + \"forceEnhancedClipboard=true\";\n      }\n      if (typeof options.swfObjectId === \"string\" && options.swfObjectId) {\n        str += (str ? \"&\" : \"\") + \"swfObjectId=\" + _encodeURIComponent(options.swfObjectId);\n      }\n      if (typeof options.jsVersion === \"string\" && options.jsVersion) {\n        str += (str ? \"&\" : \"\") + \"jsVersion=\" + _encodeURIComponent(options.jsVersion);\n      }\n      return str;\n    };\n    /**\n   * Extract the domain (e.g. \"github.com\") from an origin (e.g. \"https://github.com\") or\n   * URL (e.g. \"https://github.com/zeroclipboard/zeroclipboard/\").\n   *\n   * @returns the domain\n   * @private\n   */\n    var _extractDomain = function(originOrUrl) {\n      if (originOrUrl == null || originOrUrl === \"\") {\n        return null;\n      }\n      originOrUrl = originOrUrl.replace(/^\\s+|\\s+$/g, \"\");\n      if (originOrUrl === \"\") {\n        return null;\n      }\n      var protocolIndex = originOrUrl.indexOf(\"//\");\n      originOrUrl = protocolIndex === -1 ? originOrUrl : originOrUrl.slice(protocolIndex + 2);\n      var pathIndex = originOrUrl.indexOf(\"/\");\n      originOrUrl = pathIndex === -1 ? originOrUrl : protocolIndex === -1 || pathIndex === 0 ? null : originOrUrl.slice(0, pathIndex);\n      if (originOrUrl && originOrUrl.slice(-4).toLowerCase() === \".swf\") {\n        return null;\n      }\n      return originOrUrl || null;\n    };\n    /**\n   * Set `allowScriptAccess` based on `trustedDomains` and `window.location.host` vs. `swfPath`.\n   *\n   * @returns The appropriate script access level.\n   * @private\n   */\n    var _determineScriptAccess = function() {\n      var _extractAllDomains = function(origins) {\n        var i, len, tmp, resultsArray = [];\n        if (typeof origins === \"string\") {\n          origins = [ origins ];\n        }\n        if (!(typeof origins === \"object\" && origins && typeof origins.length === \"number\")) {\n          return resultsArray;\n        }\n        for (i = 0, len = origins.length; i < len; i++) {\n          if (_hasOwn.call(origins, i) && (tmp = _extractDomain(origins[i]))) {\n            if (tmp === \"*\") {\n              resultsArray.length = 0;\n              resultsArray.push(\"*\");\n              break;\n            }\n            if (resultsArray.indexOf(tmp) === -1) {\n              resultsArray.push(tmp);\n            }\n          }\n        }\n        return resultsArray;\n      };\n      return function(currentDomain, configOptions) {\n        var swfDomain = _extractDomain(configOptions.swfPath);\n        if (swfDomain === null) {\n          swfDomain = currentDomain;\n        }\n        var trustedDomains = _extractAllDomains(configOptions.trustedDomains);\n        var len = trustedDomains.length;\n        if (len > 0) {\n          if (len === 1 && trustedDomains[0] === \"*\") {\n            return \"always\";\n          }\n          if (trustedDomains.indexOf(currentDomain) !== -1) {\n            if (len === 1 && currentDomain === swfDomain) {\n              return \"sameDomain\";\n            }\n            return \"always\";\n          }\n        }\n        return \"never\";\n      };\n    }();\n    /**\n   * Get the currently active/focused DOM element.\n   *\n   * @returns the currently active/focused element, or `null`\n   * @private\n   */\n    var _safeActiveElement = function() {\n      try {\n        return _document.activeElement;\n      } catch (err) {\n        return null;\n      }\n    };\n    /**\n   * Add a class to an element, if it doesn't already have it.\n   *\n   * @returns The element, with its new class added.\n   * @private\n   */\n    var _addClass = function(element, value) {\n      var c, cl, className, classNames = [];\n      if (typeof value === \"string\" && value) {\n        classNames = value.split(/\\s+/);\n      }\n      if (element && element.nodeType === 1 && classNames.length > 0) {\n        className = (\" \" + (element.className || \"\") + \" \").replace(/[\\t\\r\\n\\f]/g, \" \");\n        for (c = 0, cl = classNames.length; c < cl; c++) {\n          if (className.indexOf(\" \" + classNames[c] + \" \") === -1) {\n            className += classNames[c] + \" \";\n          }\n        }\n        className = className.replace(/^\\s+|\\s+$/g, \"\");\n        if (className !== element.className) {\n          element.className = className;\n        }\n      }\n      return element;\n    };\n    /**\n   * Remove a class from an element, if it has it.\n   *\n   * @returns The element, with its class removed.\n   * @private\n   */\n    var _removeClass = function(element, value) {\n      var c, cl, className, classNames = [];\n      if (typeof value === \"string\" && value) {\n        classNames = value.split(/\\s+/);\n      }\n      if (element && element.nodeType === 1 && classNames.length > 0) {\n        if (element.className) {\n          className = (\" \" + element.className + \" \").replace(/[\\t\\r\\n\\f]/g, \" \");\n          for (c = 0, cl = classNames.length; c < cl; c++) {\n            className = className.replace(\" \" + classNames[c] + \" \", \" \");\n          }\n          className = className.replace(/^\\s+|\\s+$/g, \"\");\n          if (className !== element.className) {\n            element.className = className;\n          }\n        }\n      }\n      return element;\n    };\n    /**\n   * Attempt to interpret the element's CSS styling. If `prop` is `\"cursor\"`,\n   * then we assume that it should be a hand (\"pointer\") cursor if the element\n   * is an anchor element (\"a\" tag).\n   *\n   * @returns The computed style property.\n   * @private\n   */\n    var _getStyle = function(el, prop) {\n      var value = _getComputedStyle(el, null).getPropertyValue(prop);\n      if (prop === \"cursor\") {\n        if (!value || value === \"auto\") {\n          if (el.nodeName === \"A\") {\n            return \"pointer\";\n          }\n        }\n      }\n      return value;\n    };\n    /**\n   * Get the absolutely positioned coordinates of a DOM element.\n   *\n   * @returns Object containing the element's position, width, and height.\n   * @private\n   */\n    var _getElementPosition = function(el) {\n      var pos = {\n        left: 0,\n        top: 0,\n        width: 0,\n        height: 0\n      };\n      if (el.getBoundingClientRect) {\n        var elRect = el.getBoundingClientRect();\n        var pageXOffset = _window.pageXOffset;\n        var pageYOffset = _window.pageYOffset;\n        var leftBorderWidth = _document.documentElement.clientLeft || 0;\n        var topBorderWidth = _document.documentElement.clientTop || 0;\n        var leftBodyOffset = 0;\n        var topBodyOffset = 0;\n        if (_getStyle(_document.body, \"position\") === \"relative\") {\n          var bodyRect = _document.body.getBoundingClientRect();\n          var htmlRect = _document.documentElement.getBoundingClientRect();\n          leftBodyOffset = bodyRect.left - htmlRect.left || 0;\n          topBodyOffset = bodyRect.top - htmlRect.top || 0;\n        }\n        pos.left = elRect.left + pageXOffset - leftBorderWidth - leftBodyOffset;\n        pos.top = elRect.top + pageYOffset - topBorderWidth - topBodyOffset;\n        pos.width = \"width\" in elRect ? elRect.width : elRect.right - elRect.left;\n        pos.height = \"height\" in elRect ? elRect.height : elRect.bottom - elRect.top;\n      }\n      return pos;\n    };\n    /**\n   * Determine is an element is visible somewhere within the document (page).\n   *\n   * @returns Boolean\n   * @private\n   */\n    var _isElementVisible = function(el) {\n      if (!el) {\n        return false;\n      }\n      var styles = _getComputedStyle(el, null);\n      if (!styles) {\n        return false;\n      }\n      var hasCssHeight = _parseFloat(styles.height) > 0;\n      var hasCssWidth = _parseFloat(styles.width) > 0;\n      var hasCssTop = _parseFloat(styles.top) >= 0;\n      var hasCssLeft = _parseFloat(styles.left) >= 0;\n      var cssKnows = hasCssHeight && hasCssWidth && hasCssTop && hasCssLeft;\n      var rect = cssKnows ? null : _getElementPosition(el);\n      var isVisible = styles.display !== \"none\" && styles.visibility !== \"collapse\" && (cssKnows || !!rect && (hasCssHeight || rect.height > 0) && (hasCssWidth || rect.width > 0) && (hasCssTop || rect.top >= 0) && (hasCssLeft || rect.left >= 0));\n      return isVisible;\n    };\n    /**\n   * Clear all existing timeouts and interval polling delegates.\n   *\n   * @returns `undefined`\n   * @private\n   */\n    var _clearTimeoutsAndPolling = function() {\n      _clearTimeout(_flashCheckTimeout);\n      _flashCheckTimeout = 0;\n      _clearInterval(_swfFallbackCheckInterval);\n      _swfFallbackCheckInterval = 0;\n    };\n    /**\n   * Reposition the Flash object to cover the currently activated element.\n   *\n   * @returns `undefined`\n   * @private\n   */\n    var _reposition = function() {\n      var htmlBridge;\n      if (_currentElement && (htmlBridge = _getHtmlBridge(_flashState.bridge))) {\n        var pos = _getElementPosition(_currentElement);\n        _extend(htmlBridge.style, {\n          width: pos.width + \"px\",\n          height: pos.height + \"px\",\n          top: pos.top + \"px\",\n          left: pos.left + \"px\",\n          zIndex: \"\" + _getSafeZIndex(_globalConfig.zIndex)\n        });\n      }\n    };\n    /**\n   * Sends a signal to the Flash object to display the hand cursor if `true`.\n   *\n   * @returns `undefined`\n   * @private\n   */\n    var _setHandCursor = function(enabled) {\n      if (_flashState.ready === true) {\n        if (_flashState.bridge && typeof _flashState.bridge.setHandCursor === \"function\") {\n          _flashState.bridge.setHandCursor(enabled);\n        } else {\n          _flashState.ready = false;\n        }\n      }\n    };\n    /**\n   * Get a safe value for `zIndex`\n   *\n   * @returns an integer, or \"auto\"\n   * @private\n   */\n    var _getSafeZIndex = function(val) {\n      if (/^(?:auto|inherit)$/.test(val)) {\n        return val;\n      }\n      var zIndex;\n      if (typeof val === \"number\" && !_isNaN(val)) {\n        zIndex = val;\n      } else if (typeof val === \"string\") {\n        zIndex = _getSafeZIndex(_parseInt(val, 10));\n      }\n      return typeof zIndex === \"number\" ? zIndex : \"auto\";\n    };\n    /**\n   * Ensure OS-compliant line endings, i.e. \"\\r\\n\" on Windows, \"\\n\" elsewhere\n   *\n   * @returns string\n   * @private\n   */\n    var _fixLineEndings = function(content) {\n      var replaceRegex = /(\\r\\n|\\r|\\n)/g;\n      if (typeof content === \"string\" && _globalConfig.fixLineEndings === true) {\n        if (_isWindows()) {\n          if (/((^|[^\\r])\\n|\\r([^\\n]|$))/.test(content)) {\n            content = content.replace(replaceRegex, \"\\r\\n\");\n          }\n        } else if (/\\r/.test(content)) {\n          content = content.replace(replaceRegex, \"\\n\");\n        }\n      }\n      return content;\n    };\n    /**\n   * Attempt to detect if ZeroClipboard is executing inside of a sandboxed iframe.\n   * If it is, Flash Player cannot be used, so ZeroClipboard is dead in the water.\n   *\n   * @see {@link http://lists.w3.org/Archives/Public/public-whatwg-archive/2014Dec/0002.html}\n   * @see {@link https://github.com/zeroclipboard/zeroclipboard/issues/511}\n   * @see {@link http://zeroclipboard.org/test-iframes.html}\n   *\n   * @returns `true` (is sandboxed), `false` (is not sandboxed), or `null` (uncertain)\n   * @private\n   */\n    var _detectSandbox = function(doNotReassessFlashSupport) {\n      var effectiveScriptOrigin, frame, frameError, previousState = _flashState.sandboxed, isSandboxed = null;\n      doNotReassessFlashSupport = doNotReassessFlashSupport === true;\n      if (_pageIsFramed === false) {\n        isSandboxed = false;\n      } else {\n        try {\n          frame = window.frameElement || null;\n        } catch (e) {\n          frameError = {\n            name: e.name,\n            message: e.message\n          };\n        }\n        if (frame && frame.nodeType === 1 && frame.nodeName === \"IFRAME\") {\n          try {\n            isSandboxed = frame.hasAttribute(\"sandbox\");\n          } catch (e) {\n            isSandboxed = null;\n          }\n        } else {\n          try {\n            effectiveScriptOrigin = document.domain || null;\n          } catch (e) {\n            effectiveScriptOrigin = null;\n          }\n          if (effectiveScriptOrigin === null || frameError && frameError.name === \"SecurityError\" && /(^|[\\s\\(\\[@])sandbox(es|ed|ing|[\\s\\.,!\\)\\]@]|$)/.test(frameError.message.toLowerCase())) {\n            isSandboxed = true;\n          }\n        }\n      }\n      _flashState.sandboxed = isSandboxed;\n      if (previousState !== isSandboxed && !doNotReassessFlashSupport) {\n        _detectFlashSupport(_ActiveXObject);\n      }\n      return isSandboxed;\n    };\n    /**\n   * Detect the Flash Player status, version, and plugin type.\n   *\n   * @see {@link https://code.google.com/p/doctype-mirror/wiki/ArticleDetectFlash#The_code}\n   * @see {@link http://stackoverflow.com/questions/12866060/detecting-pepper-ppapi-flash-with-javascript}\n   *\n   * @returns `undefined`\n   * @private\n   */\n    var _detectFlashSupport = function(ActiveXObject) {\n      var plugin, ax, mimeType, hasFlash = false, isActiveX = false, isPPAPI = false, flashVersion = \"\";\n      /**\n     * Derived from Apple's suggested sniffer.\n     * @param {String} desc e.g. \"Shockwave Flash 7.0 r61\"\n     * @returns {String} \"7.0.61\"\n     * @private\n     */\n      function parseFlashVersion(desc) {\n        var matches = desc.match(/[\\d]+/g);\n        matches.length = 3;\n        return matches.join(\".\");\n      }\n      function isPepperFlash(flashPlayerFileName) {\n        return !!flashPlayerFileName && (flashPlayerFileName = flashPlayerFileName.toLowerCase()) && (/^(pepflashplayer\\.dll|libpepflashplayer\\.so|pepperflashplayer\\.plugin)$/.test(flashPlayerFileName) || flashPlayerFileName.slice(-13) === \"chrome.plugin\");\n      }\n      function inspectPlugin(plugin) {\n        if (plugin) {\n          hasFlash = true;\n          if (plugin.version) {\n            flashVersion = parseFlashVersion(plugin.version);\n          }\n          if (!flashVersion && plugin.description) {\n            flashVersion = parseFlashVersion(plugin.description);\n          }\n          if (plugin.filename) {\n            isPPAPI = isPepperFlash(plugin.filename);\n          }\n        }\n      }\n      if (_navigator.plugins && _navigator.plugins.length) {\n        plugin = _navigator.plugins[\"Shockwave Flash\"];\n        inspectPlugin(plugin);\n        if (_navigator.plugins[\"Shockwave Flash 2.0\"]) {\n          hasFlash = true;\n          flashVersion = \"2.0.0.11\";\n        }\n      } else if (_navigator.mimeTypes && _navigator.mimeTypes.length) {\n        mimeType = _navigator.mimeTypes[\"application/x-shockwave-flash\"];\n        plugin = mimeType && mimeType.enabledPlugin;\n        inspectPlugin(plugin);\n      } else if (typeof ActiveXObject !== \"undefined\") {\n        isActiveX = true;\n        try {\n          ax = new ActiveXObject(\"ShockwaveFlash.ShockwaveFlash.7\");\n          hasFlash = true;\n          flashVersion = parseFlashVersion(ax.GetVariable(\"$version\"));\n        } catch (e1) {\n          try {\n            ax = new ActiveXObject(\"ShockwaveFlash.ShockwaveFlash.6\");\n            hasFlash = true;\n            flashVersion = \"6.0.21\";\n          } catch (e2) {\n            try {\n              ax = new ActiveXObject(\"ShockwaveFlash.ShockwaveFlash\");\n              hasFlash = true;\n              flashVersion = parseFlashVersion(ax.GetVariable(\"$version\"));\n            } catch (e3) {\n              isActiveX = false;\n            }\n          }\n        }\n      }\n      _flashState.disabled = hasFlash !== true;\n      _flashState.outdated = flashVersion && _parseFloat(flashVersion) < _parseFloat(_minimumFlashVersion);\n      _flashState.version = flashVersion || \"0.0.0\";\n      _flashState.pluginType = isPPAPI ? \"pepper\" : isActiveX ? \"activex\" : hasFlash ? \"netscape\" : \"unknown\";\n    };\n    /**\n   * Invoke the Flash detection algorithms immediately upon inclusion so we're not waiting later.\n   */\n    _detectFlashSupport(_ActiveXObject);\n    /**\n   * Always assess the `sandboxed` state of the page at important Flash-related moments.\n   */\n    _detectSandbox(true);\n    /**\n   * A shell constructor for `ZeroClipboard` client instances.\n   *\n   * @constructor\n   */\n    var ZeroClipboard = function() {\n      if (!(this instanceof ZeroClipboard)) {\n        return new ZeroClipboard();\n      }\n      if (typeof ZeroClipboard._createClient === \"function\") {\n        ZeroClipboard._createClient.apply(this, _args(arguments));\n      }\n    };\n    /**\n   * The ZeroClipboard library's version number.\n   *\n   * @static\n   * @readonly\n   * @property {string}\n   */\n    ZeroClipboard.version = \"2.4.0-beta.1\";\n    /**\n   * Update or get a copy of the ZeroClipboard global configuration.\n   * Returns a copy of the current/updated configuration.\n   *\n   * @returns Object\n   * @static\n   */\n    ZeroClipboard.config = function() {\n      return _config.apply(this, _args(arguments));\n    };\n    /**\n   * Diagnostic method that describes the state of the browser, Flash Player, and ZeroClipboard.\n   *\n   * @returns Object\n   * @static\n   */\n    ZeroClipboard.state = function() {\n      return _state.apply(this, _args(arguments));\n    };\n    /**\n   * Check if Flash is unusable for any reason: disabled, outdated, deactivated, etc.\n   *\n   * @returns Boolean\n   * @static\n   */\n    ZeroClipboard.isFlashUnusable = function() {\n      return _isFlashUnusable.apply(this, _args(arguments));\n    };\n    /**\n   * Register an event listener.\n   *\n   * @returns `ZeroClipboard`\n   * @static\n   */\n    ZeroClipboard.on = function() {\n      return _on.apply(this, _args(arguments));\n    };\n    /**\n   * Unregister an event listener.\n   * If no `listener` function/object is provided, it will unregister all listeners for the provided `eventType`.\n   * If no `eventType` is provided, it will unregister all listeners for every event type.\n   *\n   * @returns `ZeroClipboard`\n   * @static\n   */\n    ZeroClipboard.off = function() {\n      return _off.apply(this, _args(arguments));\n    };\n    /**\n   * Retrieve event listeners for an `eventType`.\n   * If no `eventType` is provided, it will retrieve all listeners for every event type.\n   *\n   * @returns array of listeners for the `eventType`; if no `eventType`, then a map/hash object of listeners for all event types; or `null`\n   */\n    ZeroClipboard.handlers = function() {\n      return _listeners.apply(this, _args(arguments));\n    };\n    /**\n   * Event emission receiver from the Flash object, forwarding to any registered JavaScript event listeners.\n   *\n   * @returns For the \"copy\" event, returns the Flash-friendly \"clipData\" object; otherwise `undefined`.\n   * @static\n   */\n    ZeroClipboard.emit = function() {\n      return _emit.apply(this, _args(arguments));\n    };\n    /**\n   * Create and embed the Flash object.\n   *\n   * @returns The Flash object\n   * @static\n   */\n    ZeroClipboard.create = function() {\n      return _create.apply(this, _args(arguments));\n    };\n    /**\n   * Self-destruct and clean up everything, including the embedded Flash object.\n   *\n   * @returns `undefined`\n   * @static\n   */\n    ZeroClipboard.destroy = function() {\n      return _destroy.apply(this, _args(arguments));\n    };\n    /**\n   * Set the pending data for clipboard injection.\n   *\n   * @returns `undefined`\n   * @static\n   */\n    ZeroClipboard.setData = function() {\n      return _setData.apply(this, _args(arguments));\n    };\n    /**\n   * Clear the pending data for clipboard injection.\n   * If no `format` is provided, all pending data formats will be cleared.\n   *\n   * @returns `undefined`\n   * @static\n   */\n    ZeroClipboard.clearData = function() {\n      return _clearData.apply(this, _args(arguments));\n    };\n    /**\n   * Get a copy of the pending data for clipboard injection.\n   * If no `format` is provided, a copy of ALL pending data formats will be returned.\n   *\n   * @returns `String` or `Object`\n   * @static\n   */\n    ZeroClipboard.getData = function() {\n      return _getData.apply(this, _args(arguments));\n    };\n    /**\n   * Sets the current HTML object that the Flash object should overlay. This will put the global\n   * Flash object on top of the current element; depending on the setup, this may also set the\n   * pending clipboard text data as well as the Flash object's wrapping element's title attribute\n   * based on the underlying HTML element and ZeroClipboard configuration.\n   *\n   * @returns `undefined`\n   * @static\n   */\n    ZeroClipboard.focus = ZeroClipboard.activate = function() {\n      return _focus.apply(this, _args(arguments));\n    };\n    /**\n   * Un-overlays the Flash object. This will put the global Flash object off-screen; depending on\n   * the setup, this may also unset the Flash object's wrapping element's title attribute based on\n   * the underlying HTML element and ZeroClipboard configuration.\n   *\n   * @returns `undefined`\n   * @static\n   */\n    ZeroClipboard.blur = ZeroClipboard.deactivate = function() {\n      return _blur.apply(this, _args(arguments));\n    };\n    /**\n   * Returns the currently focused/\"activated\" HTML element that the Flash object is wrapping.\n   *\n   * @returns `HTMLElement` or `null`\n   * @static\n   */\n    ZeroClipboard.activeElement = function() {\n      return _activeElement.apply(this, _args(arguments));\n    };\n    /**\n   * Keep track of the ZeroClipboard client instance counter.\n   */\n    var _clientIdCounter = 0;\n    /**\n   * Keep track of the state of the client instances.\n   *\n   * Entry structure:\n   *   _clientMeta[client.id] = {\n   *     instance: client,\n   *     elements: [],\n   *     handlers: {},\n   *     coreWildcardHandler: function(event) { return client.emit(event); }\n   *   };\n   */\n    var _clientMeta = {};\n    /**\n   * Keep track of the ZeroClipboard clipped elements counter.\n   */\n    var _elementIdCounter = 0;\n    /**\n   * Keep track of the state of the clipped element relationships to clients.\n   *\n   * Entry structure:\n   *   _elementMeta[element.zcClippingId] = [client1.id, client2.id];\n   */\n    var _elementMeta = {};\n    /**\n   * Keep track of the state of the mouse event handlers for clipped elements.\n   *\n   * Entry structure:\n   *   _mouseHandlers[element.zcClippingId] = {\n   *     mouseover:  function(event) {},\n   *     mouseout:   function(event) {},\n   *     mouseenter: function(event) {},\n   *     mouseleave: function(event) {},\n   *     mousemove:  function(event) {}\n   *   };\n   */\n    var _mouseHandlers = {};\n    /**\n   * Extending the ZeroClipboard configuration defaults for the Client module.\n   */\n    _extend(_globalConfig, {\n      autoActivate: true\n    });\n    /**\n   * The real constructor for `ZeroClipboard` client instances.\n   * @private\n   */\n    var _clientConstructor = function(elements) {\n      var meta, client = this;\n      client.id = \"\" + _clientIdCounter++;\n      meta = {\n        instance: client,\n        elements: [],\n        handlers: {},\n        coreWildcardHandler: function(event) {\n          return client.emit(event);\n        }\n      };\n      _clientMeta[client.id] = meta;\n      if (elements) {\n        client.clip(elements);\n      }\n      ZeroClipboard.on(\"*\", meta.coreWildcardHandler);\n      ZeroClipboard.on(\"destroy\", function() {\n        client.destroy();\n      });\n      ZeroClipboard.create();\n    };\n    /**\n   * The underlying implementation of `ZeroClipboard.Client.prototype.on`.\n   * @private\n   */\n    var _clientOn = function(eventType, listener) {\n      var i, len, events, added = {}, client = this, meta = _clientMeta[client.id], handlers = meta && meta.handlers;\n      if (!meta) {\n        throw new Error(\"Attempted to add new listener(s) to a destroyed ZeroClipboard client instance\");\n      }\n      if (typeof eventType === \"string\" && eventType) {\n        events = eventType.toLowerCase().split(/\\s+/);\n      } else if (typeof eventType === \"object\" && eventType && !(\"length\" in eventType) && typeof listener === \"undefined\") {\n        _keys(eventType).forEach(function(key) {\n          var listener = eventType[key];\n          if (typeof listener === \"function\") {\n            client.on(key, listener);\n          }\n        });\n      }\n      if (events && events.length && listener) {\n        for (i = 0, len = events.length; i < len; i++) {\n          eventType = events[i].replace(/^on/, \"\");\n          added[eventType] = true;\n          if (!handlers[eventType]) {\n            handlers[eventType] = [];\n          }\n          handlers[eventType].push(listener);\n        }\n        if (added.ready && _flashState.ready) {\n          this.emit({\n            type: \"ready\",\n            client: this\n          });\n        }\n        if (added.error) {\n          for (i = 0, len = _flashStateErrorNames.length; i < len; i++) {\n            if (_flashState[_flashStateErrorNames[i].replace(/^flash-/, \"\")]) {\n              this.emit({\n                type: \"error\",\n                name: _flashStateErrorNames[i],\n                client: this\n              });\n              break;\n            }\n          }\n          if (_zcSwfVersion !== undefined && ZeroClipboard.version !== _zcSwfVersion) {\n            this.emit({\n              type: \"error\",\n              name: \"version-mismatch\",\n              jsVersion: ZeroClipboard.version,\n              swfVersion: _zcSwfVersion\n            });\n          }\n        }\n      }\n      return client;\n    };\n    /**\n   * The underlying implementation of `ZeroClipboard.Client.prototype.off`.\n   * @private\n   */\n    var _clientOff = function(eventType, listener) {\n      var i, len, foundIndex, events, perEventHandlers, client = this, meta = _clientMeta[client.id], handlers = meta && meta.handlers;\n      if (!handlers) {\n        return client;\n      }\n      if (arguments.length === 0) {\n        events = _keys(handlers);\n      } else if (typeof eventType === \"string\" && eventType) {\n        events = eventType.split(/\\s+/);\n      } else if (typeof eventType === \"object\" && eventType && !(\"length\" in eventType) && typeof listener === \"undefined\") {\n        _keys(eventType).forEach(function(key) {\n          var listener = eventType[key];\n          if (typeof listener === \"function\") {\n            client.off(key, listener);\n          }\n        });\n      }\n      if (events && events.length) {\n        for (i = 0, len = events.length; i < len; i++) {\n          eventType = events[i].toLowerCase().replace(/^on/, \"\");\n          perEventHandlers = handlers[eventType];\n          if (perEventHandlers && perEventHandlers.length) {\n            if (listener) {\n              foundIndex = perEventHandlers.indexOf(listener);\n              while (foundIndex !== -1) {\n                perEventHandlers.splice(foundIndex, 1);\n                foundIndex = perEventHandlers.indexOf(listener, foundIndex);\n              }\n            } else {\n              perEventHandlers.length = 0;\n            }\n          }\n        }\n      }\n      return client;\n    };\n    /**\n   * The underlying implementation of `ZeroClipboard.Client.prototype.handlers`.\n   * @private\n   */\n    var _clientListeners = function(eventType) {\n      var copy = null, handlers = _clientMeta[this.id] && _clientMeta[this.id].handlers;\n      if (handlers) {\n        if (typeof eventType === \"string\" && eventType) {\n          copy = handlers[eventType] ? handlers[eventType].slice(0) : [];\n        } else {\n          copy = _deepCopy(handlers);\n        }\n      }\n      return copy;\n    };\n    /**\n   * The underlying implementation of `ZeroClipboard.Client.prototype.emit`.\n   * @private\n   */\n    var _clientEmit = function(event) {\n      var eventCopy, client = this;\n      if (_clientShouldEmit.call(client, event)) {\n        if (typeof event === \"object\" && event && typeof event.type === \"string\" && event.type) {\n          event = _extend({}, event);\n        }\n        eventCopy = _extend({}, _createEvent(event), {\n          client: client\n        });\n        _clientDispatchCallbacks.call(client, eventCopy);\n      }\n      return client;\n    };\n    /**\n   * The underlying implementation of `ZeroClipboard.Client.prototype.clip`.\n   * @private\n   */\n    var _clientClip = function(elements) {\n      if (!_clientMeta[this.id]) {\n        throw new Error(\"Attempted to clip element(s) to a destroyed ZeroClipboard client instance\");\n      }\n      elements = _prepClip(elements);\n      for (var i = 0; i < elements.length; i++) {\n        if (_hasOwn.call(elements, i) && elements[i] && elements[i].nodeType === 1) {\n          if (!elements[i].zcClippingId) {\n            elements[i].zcClippingId = \"zcClippingId_\" + _elementIdCounter++;\n            _elementMeta[elements[i].zcClippingId] = [ this.id ];\n            if (_globalConfig.autoActivate === true) {\n              _addMouseHandlers(elements[i]);\n            }\n          } else if (_elementMeta[elements[i].zcClippingId].indexOf(this.id) === -1) {\n            _elementMeta[elements[i].zcClippingId].push(this.id);\n          }\n          var clippedElements = _clientMeta[this.id] && _clientMeta[this.id].elements;\n          if (clippedElements.indexOf(elements[i]) === -1) {\n            clippedElements.push(elements[i]);\n          }\n        }\n      }\n      return this;\n    };\n    /**\n   * The underlying implementation of `ZeroClipboard.Client.prototype.unclip`.\n   * @private\n   */\n    var _clientUnclip = function(elements) {\n      var meta = _clientMeta[this.id];\n      if (!meta) {\n        return this;\n      }\n      var clippedElements = meta.elements;\n      var arrayIndex;\n      if (typeof elements === \"undefined\") {\n        elements = clippedElements.slice(0);\n      } else {\n        elements = _prepClip(elements);\n      }\n      for (var i = elements.length; i--; ) {\n        if (_hasOwn.call(elements, i) && elements[i] && elements[i].nodeType === 1) {\n          arrayIndex = 0;\n          while ((arrayIndex = clippedElements.indexOf(elements[i], arrayIndex)) !== -1) {\n            clippedElements.splice(arrayIndex, 1);\n          }\n          var clientIds = _elementMeta[elements[i].zcClippingId];\n          if (clientIds) {\n            arrayIndex = 0;\n            while ((arrayIndex = clientIds.indexOf(this.id, arrayIndex)) !== -1) {\n              clientIds.splice(arrayIndex, 1);\n            }\n            if (clientIds.length === 0) {\n              if (_globalConfig.autoActivate === true) {\n                _removeMouseHandlers(elements[i]);\n              }\n              delete elements[i].zcClippingId;\n            }\n          }\n        }\n      }\n      return this;\n    };\n    /**\n   * The underlying implementation of `ZeroClipboard.Client.prototype.elements`.\n   * @private\n   */\n    var _clientElements = function() {\n      var meta = _clientMeta[this.id];\n      return meta && meta.elements ? meta.elements.slice(0) : [];\n    };\n    /**\n   * The underlying implementation of `ZeroClipboard.Client.prototype.destroy`.\n   * @private\n   */\n    var _clientDestroy = function() {\n      var meta = _clientMeta[this.id];\n      if (!meta) {\n        return;\n      }\n      this.unclip();\n      this.off();\n      ZeroClipboard.off(\"*\", meta.coreWildcardHandler);\n      delete _clientMeta[this.id];\n    };\n    /**\n   * Inspect an Event to see if the Client (`this`) should honor it for emission.\n   * @private\n   */\n    var _clientShouldEmit = function(event) {\n      if (!(event && event.type)) {\n        return false;\n      }\n      if (event.client && event.client !== this) {\n        return false;\n      }\n      var meta = _clientMeta[this.id];\n      var clippedEls = meta && meta.elements;\n      var hasClippedEls = !!clippedEls && clippedEls.length > 0;\n      var goodTarget = !event.target || hasClippedEls && clippedEls.indexOf(event.target) !== -1;\n      var goodRelTarget = event.relatedTarget && hasClippedEls && clippedEls.indexOf(event.relatedTarget) !== -1;\n      var goodClient = event.client && event.client === this;\n      if (!meta || !(goodTarget || goodRelTarget || goodClient)) {\n        return false;\n      }\n      return true;\n    };\n    /**\n   * Handle the actual dispatching of events to a client instance.\n   *\n   * @returns `undefined`\n   * @private\n   */\n    var _clientDispatchCallbacks = function(event) {\n      var meta = _clientMeta[this.id];\n      if (!(typeof event === \"object\" && event && event.type && meta)) {\n        return;\n      }\n      var async = _shouldPerformAsync(event);\n      var wildcardTypeHandlers = meta && meta.handlers[\"*\"] || [];\n      var specificTypeHandlers = meta && meta.handlers[event.type] || [];\n      var handlers = wildcardTypeHandlers.concat(specificTypeHandlers);\n      if (handlers && handlers.length) {\n        var i, len, func, context, eventCopy, originalContext = this;\n        for (i = 0, len = handlers.length; i < len; i++) {\n          func = handlers[i];\n          context = originalContext;\n          if (typeof func === \"string\" && typeof _window[func] === \"function\") {\n            func = _window[func];\n          }\n          if (typeof func === \"object\" && func && typeof func.handleEvent === \"function\") {\n            context = func;\n            func = func.handleEvent;\n          }\n          if (typeof func === \"function\") {\n            eventCopy = _extend({}, event);\n            _dispatchCallback(func, context, [ eventCopy ], async);\n          }\n        }\n      }\n    };\n    /**\n   * Prepares the elements for clipping/unclipping.\n   *\n   * @returns An Array of elements.\n   * @private\n   */\n    var _prepClip = function(elements) {\n      if (typeof elements === \"string\") {\n        elements = [];\n      }\n      return typeof elements.length !== \"number\" ? [ elements ] : elements;\n    };\n    /**\n   * Add a `mouseover` handler function for a clipped element.\n   *\n   * @returns `undefined`\n   * @private\n   */\n    var _addMouseHandlers = function(element) {\n      if (!(element && element.nodeType === 1)) {\n        return;\n      }\n      var _suppressMouseEvents = function(event) {\n        if (!(event || (event = _window.event))) {\n          return;\n        }\n        if (event._source !== \"js\") {\n          event.stopImmediatePropagation();\n          event.preventDefault();\n        }\n        delete event._source;\n      };\n      var _elementMouseOver = function(event) {\n        if (!(event || (event = _window.event))) {\n          return;\n        }\n        _suppressMouseEvents(event);\n        ZeroClipboard.focus(element);\n      };\n      element.addEventListener(\"mouseover\", _elementMouseOver, false);\n      element.addEventListener(\"mouseout\", _suppressMouseEvents, false);\n      element.addEventListener(\"mouseenter\", _suppressMouseEvents, false);\n      element.addEventListener(\"mouseleave\", _suppressMouseEvents, false);\n      element.addEventListener(\"mousemove\", _suppressMouseEvents, false);\n      _mouseHandlers[element.zcClippingId] = {\n        mouseover: _elementMouseOver,\n        mouseout: _suppressMouseEvents,\n        mouseenter: _suppressMouseEvents,\n        mouseleave: _suppressMouseEvents,\n        mousemove: _suppressMouseEvents\n      };\n    };\n    /**\n   * Remove a `mouseover` handler function for a clipped element.\n   *\n   * @returns `undefined`\n   * @private\n   */\n    var _removeMouseHandlers = function(element) {\n      if (!(element && element.nodeType === 1)) {\n        return;\n      }\n      var mouseHandlers = _mouseHandlers[element.zcClippingId];\n      if (!(typeof mouseHandlers === \"object\" && mouseHandlers)) {\n        return;\n      }\n      var key, val, mouseEvents = [ \"move\", \"leave\", \"enter\", \"out\", \"over\" ];\n      for (var i = 0, len = mouseEvents.length; i < len; i++) {\n        key = \"mouse\" + mouseEvents[i];\n        val = mouseHandlers[key];\n        if (typeof val === \"function\") {\n          element.removeEventListener(key, val, false);\n        }\n      }\n      delete _mouseHandlers[element.zcClippingId];\n    };\n    /**\n   * Creates a new ZeroClipboard client instance.\n   * Optionally, auto-`clip` an element or collection of elements.\n   *\n   * @constructor\n   */\n    ZeroClipboard._createClient = function() {\n      _clientConstructor.apply(this, _args(arguments));\n    };\n    /**\n   * Register an event listener to the client.\n   *\n   * @returns `this`\n   */\n    ZeroClipboard.prototype.on = function() {\n      return _clientOn.apply(this, _args(arguments));\n    };\n    /**\n   * Unregister an event handler from the client.\n   * If no `listener` function/object is provided, it will unregister all handlers for the provided `eventType`.\n   * If no `eventType` is provided, it will unregister all handlers for every event type.\n   *\n   * @returns `this`\n   */\n    ZeroClipboard.prototype.off = function() {\n      return _clientOff.apply(this, _args(arguments));\n    };\n    /**\n   * Retrieve event listeners for an `eventType` from the client.\n   * If no `eventType` is provided, it will retrieve all listeners for every event type.\n   *\n   * @returns array of listeners for the `eventType`; if no `eventType`, then a map/hash object of listeners for all event types; or `null`\n   */\n    ZeroClipboard.prototype.handlers = function() {\n      return _clientListeners.apply(this, _args(arguments));\n    };\n    /**\n   * Event emission receiver from the Flash object for this client's registered JavaScript event listeners.\n   *\n   * @returns For the \"copy\" event, returns the Flash-friendly \"clipData\" object; otherwise `undefined`.\n   */\n    ZeroClipboard.prototype.emit = function() {\n      return _clientEmit.apply(this, _args(arguments));\n    };\n    /**\n   * Register clipboard actions for new element(s) to the client.\n   *\n   * @returns `this`\n   */\n    ZeroClipboard.prototype.clip = function() {\n      return _clientClip.apply(this, _args(arguments));\n    };\n    /**\n   * Unregister the clipboard actions of previously registered element(s) on the page.\n   * If no elements are provided, ALL registered elements will be unregistered.\n   *\n   * @returns `this`\n   */\n    ZeroClipboard.prototype.unclip = function() {\n      return _clientUnclip.apply(this, _args(arguments));\n    };\n    /**\n   * Get all of the elements to which this client is clipped.\n   *\n   * @returns array of clipped elements\n   */\n    ZeroClipboard.prototype.elements = function() {\n      return _clientElements.apply(this, _args(arguments));\n    };\n    /**\n   * Self-destruct and clean up everything for a single client.\n   * This will NOT destroy the embedded Flash object.\n   *\n   * @returns `undefined`\n   */\n    ZeroClipboard.prototype.destroy = function() {\n      return _clientDestroy.apply(this, _args(arguments));\n    };\n    /**\n   * Stores the pending plain text to inject into the clipboard.\n   *\n   * @returns `this`\n   */\n    ZeroClipboard.prototype.setText = function(text) {\n      if (!_clientMeta[this.id]) {\n        throw new Error(\"Attempted to set pending clipboard data from a destroyed ZeroClipboard client instance\");\n      }\n      ZeroClipboard.setData(\"text/plain\", text);\n      return this;\n    };\n    /**\n   * Stores the pending HTML text to inject into the clipboard.\n   *\n   * @returns `this`\n   */\n    ZeroClipboard.prototype.setHtml = function(html) {\n      if (!_clientMeta[this.id]) {\n        throw new Error(\"Attempted to set pending clipboard data from a destroyed ZeroClipboard client instance\");\n      }\n      ZeroClipboard.setData(\"text/html\", html);\n      return this;\n    };\n    /**\n   * Stores the pending rich text (RTF) to inject into the clipboard.\n   *\n   * @returns `this`\n   */\n    ZeroClipboard.prototype.setRichText = function(richText) {\n      if (!_clientMeta[this.id]) {\n        throw new Error(\"Attempted to set pending clipboard data from a destroyed ZeroClipboard client instance\");\n      }\n      ZeroClipboard.setData(\"application/rtf\", richText);\n      return this;\n    };\n    /**\n   * Stores the pending data to inject into the clipboard.\n   *\n   * @returns `this`\n   */\n    ZeroClipboard.prototype.setData = function() {\n      if (!_clientMeta[this.id]) {\n        throw new Error(\"Attempted to set pending clipboard data from a destroyed ZeroClipboard client instance\");\n      }\n      ZeroClipboard.setData.apply(this, _args(arguments));\n      return this;\n    };\n    /**\n   * Clears the pending data to inject into the clipboard.\n   * If no `format` is provided, all pending data formats will be cleared.\n   *\n   * @returns `this`\n   */\n    ZeroClipboard.prototype.clearData = function() {\n      if (!_clientMeta[this.id]) {\n        throw new Error(\"Attempted to clear pending clipboard data from a destroyed ZeroClipboard client instance\");\n      }\n      ZeroClipboard.clearData.apply(this, _args(arguments));\n      return this;\n    };\n    /**\n   * Gets a copy of the pending data to inject into the clipboard.\n   * If no `format` is provided, a copy of ALL pending data formats will be returned.\n   *\n   * @returns `String` or `Object`\n   */\n    ZeroClipboard.prototype.getData = function() {\n      if (!_clientMeta[this.id]) {\n        throw new Error(\"Attempted to get pending clipboard data from a destroyed ZeroClipboard client instance\");\n      }\n      return ZeroClipboard.getData.apply(this, _args(arguments));\n    };\n    if (typeof define === \"function\" && define.amd) {\n      define(function() {\n        return ZeroClipboard;\n      });\n    } else if (typeof module === \"object\" && module && typeof module.exports === \"object\" && module.exports) {\n      module.exports = ZeroClipboard;\n    } else {\n      window.ZeroClipboard = ZeroClipboard;\n    }\n  })(function() {\n    return this || window;\n  }());\n  \n  /*!\n   * clipboard.js v1.6.1\n   * https://zenorocha.github.io/clipboard.js\n   *\n   * Licensed MIT © Zeno Rocha\n   */\n  (function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Clipboard = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n  var DOCUMENT_NODE_TYPE = 9;\n  \n  /**\n   * A polyfill for Element.matches()\n   */\n  if (typeof Element !== 'undefined' && !Element.prototype.matches) {\n      var proto = Element.prototype;\n  \n      proto.matches = proto.matchesSelector ||\n                      proto.mozMatchesSelector ||\n                      proto.msMatchesSelector ||\n                      proto.oMatchesSelector ||\n                      proto.webkitMatchesSelector;\n  }\n  \n  /**\n   * Finds the closest parent that matches a selector.\n   *\n   * @param {Element} element\n   * @param {String} selector\n   * @return {Function}\n   */\n  function closest (element, selector) {\n      while (element && element.nodeType !== DOCUMENT_NODE_TYPE) {\n          if (element.matches(selector)) return element;\n          element = element.parentNode;\n      }\n  }\n  \n  module.exports = closest;\n  \n  },{}],2:[function(require,module,exports){\n  var closest = require('./closest');\n  \n  /**\n   * Delegates event to a selector.\n   *\n   * @param {Element} element\n   * @param {String} selector\n   * @param {String} type\n   * @param {Function} callback\n   * @param {Boolean} useCapture\n   * @return {Object}\n   */\n  function delegate(element, selector, type, callback, useCapture) {\n      var listenerFn = listener.apply(this, arguments);\n  \n      element.addEventListener(type, listenerFn, useCapture);\n  \n      return {\n          destroy: function() {\n              element.removeEventListener(type, listenerFn, useCapture);\n          }\n      }\n  }\n  \n  /**\n   * Finds closest match and invokes callback.\n   *\n   * @param {Element} element\n   * @param {String} selector\n   * @param {String} type\n   * @param {Function} callback\n   * @return {Function}\n   */\n  function listener(element, selector, type, callback) {\n      return function(e) {\n          e.delegateTarget = closest(e.target, selector);\n  \n          if (e.delegateTarget) {\n              callback.call(element, e);\n          }\n      }\n  }\n  \n  module.exports = delegate;\n  \n  },{\"./closest\":1}],3:[function(require,module,exports){\n  /**\n   * Check if argument is a HTML element.\n   *\n   * @param {Object} value\n   * @return {Boolean}\n   */\n  exports.node = function(value) {\n      return value !== undefined\n          && value instanceof HTMLElement\n          && value.nodeType === 1;\n  };\n  \n  /**\n   * Check if argument is a list of HTML elements.\n   *\n   * @param {Object} value\n   * @return {Boolean}\n   */\n  exports.nodeList = function(value) {\n      var type = Object.prototype.toString.call(value);\n  \n      return value !== undefined\n          && (type === '[object NodeList]' || type === '[object HTMLCollection]')\n          && ('length' in value)\n          && (value.length === 0 || exports.node(value[0]));\n  };\n  \n  /**\n   * Check if argument is a string.\n   *\n   * @param {Object} value\n   * @return {Boolean}\n   */\n  exports.string = function(value) {\n      return typeof value === 'string'\n          || value instanceof String;\n  };\n  \n  /**\n   * Check if argument is a function.\n   *\n   * @param {Object} value\n   * @return {Boolean}\n   */\n  exports.fn = function(value) {\n      var type = Object.prototype.toString.call(value);\n  \n      return type === '[object Function]';\n  };\n  \n  },{}],4:[function(require,module,exports){\n  var is = require('./is');\n  var delegate = require('delegate');\n  \n  /**\n   * Validates all params and calls the right\n   * listener function based on its target type.\n   *\n   * @param {String|HTMLElement|HTMLCollection|NodeList} target\n   * @param {String} type\n   * @param {Function} callback\n   * @return {Object}\n   */\n  function listen(target, type, callback) {\n      if (!target && !type && !callback) {\n          throw new Error('Missing required arguments');\n      }\n  \n      if (!is.string(type)) {\n          throw new TypeError('Second argument must be a String');\n      }\n  \n      if (!is.fn(callback)) {\n          throw new TypeError('Third argument must be a Function');\n      }\n  \n      if (is.node(target)) {\n          return listenNode(target, type, callback);\n      }\n      else if (is.nodeList(target)) {\n          return listenNodeList(target, type, callback);\n      }\n      else if (is.string(target)) {\n          return listenSelector(target, type, callback);\n      }\n      else {\n          throw new TypeError('First argument must be a String, HTMLElement, HTMLCollection, or NodeList');\n      }\n  }\n  \n  /**\n   * Adds an event listener to a HTML element\n   * and returns a remove listener function.\n   *\n   * @param {HTMLElement} node\n   * @param {String} type\n   * @param {Function} callback\n   * @return {Object}\n   */\n  function listenNode(node, type, callback) {\n      node.addEventListener(type, callback);\n  \n      return {\n          destroy: function() {\n              node.removeEventListener(type, callback);\n          }\n      }\n  }\n  \n  /**\n   * Add an event listener to a list of HTML elements\n   * and returns a remove listener function.\n   *\n   * @param {NodeList|HTMLCollection} nodeList\n   * @param {String} type\n   * @param {Function} callback\n   * @return {Object}\n   */\n  function listenNodeList(nodeList, type, callback) {\n      Array.prototype.forEach.call(nodeList, function(node) {\n          node.addEventListener(type, callback);\n      });\n  \n      return {\n          destroy: function() {\n              Array.prototype.forEach.call(nodeList, function(node) {\n                  node.removeEventListener(type, callback);\n              });\n          }\n      }\n  }\n  \n  /**\n   * Add an event listener to a selector\n   * and returns a remove listener function.\n   *\n   * @param {String} selector\n   * @param {String} type\n   * @param {Function} callback\n   * @return {Object}\n   */\n  function listenSelector(selector, type, callback) {\n      return delegate(document.body, selector, type, callback);\n  }\n  \n  module.exports = listen;\n  \n  },{\"./is\":3,\"delegate\":2}],5:[function(require,module,exports){\n  function select(element) {\n      var selectedText;\n  \n      if (element.nodeName === 'SELECT') {\n          element.focus();\n  \n          selectedText = element.value;\n      }\n      else if (element.nodeName === 'INPUT' || element.nodeName === 'TEXTAREA') {\n          var isReadOnly = element.hasAttribute('readonly');\n  \n          if (!isReadOnly) {\n              element.setAttribute('readonly', '');\n          }\n  \n          element.select();\n          element.setSelectionRange(0, element.value.length);\n  \n          if (!isReadOnly) {\n              element.removeAttribute('readonly');\n          }\n  \n          selectedText = element.value;\n      }\n      else {\n          if (element.hasAttribute('contenteditable')) {\n              element.focus();\n          }\n  \n          var selection = window.getSelection();\n          var range = document.createRange();\n  \n          range.selectNodeContents(element);\n          selection.removeAllRanges();\n          selection.addRange(range);\n  \n          selectedText = selection.toString();\n      }\n  \n      return selectedText;\n  }\n  \n  module.exports = select;\n  \n  },{}],6:[function(require,module,exports){\n  function E () {\n    // Keep this empty so it's easier to inherit from\n    // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)\n  }\n  \n  E.prototype = {\n    on: function (name, callback, ctx) {\n      var e = this.e || (this.e = {});\n  \n      (e[name] || (e[name] = [])).push({\n        fn: callback,\n        ctx: ctx\n      });\n  \n      return this;\n    },\n  \n    once: function (name, callback, ctx) {\n      var self = this;\n      function listener () {\n        self.off(name, listener);\n        callback.apply(ctx, arguments);\n      };\n  \n      listener._ = callback\n      return this.on(name, listener, ctx);\n    },\n  \n    emit: function (name) {\n      var data = [].slice.call(arguments, 1);\n      var evtArr = ((this.e || (this.e = {}))[name] || []).slice();\n      var i = 0;\n      var len = evtArr.length;\n  \n      for (i; i < len; i++) {\n        evtArr[i].fn.apply(evtArr[i].ctx, data);\n      }\n  \n      return this;\n    },\n  \n    off: function (name, callback) {\n      var e = this.e || (this.e = {});\n      var evts = e[name];\n      var liveEvents = [];\n  \n      if (evts && callback) {\n        for (var i = 0, len = evts.length; i < len; i++) {\n          if (evts[i].fn !== callback && evts[i].fn._ !== callback)\n            liveEvents.push(evts[i]);\n        }\n      }\n  \n      // Remove event from queue to prevent memory leak\n      // Suggested by https://github.com/lazd\n      // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910\n  \n      (liveEvents.length)\n        ? e[name] = liveEvents\n        : delete e[name];\n  \n      return this;\n    }\n  };\n  \n  module.exports = E;\n  \n  },{}],7:[function(require,module,exports){\n  (function (global, factory) {\n      if (typeof define === \"function\" && define.amd) {\n          define(['module', 'select'], factory);\n      } else if (typeof exports !== \"undefined\") {\n          factory(module, require('select'));\n      } else {\n          var mod = {\n              exports: {}\n          };\n          factory(mod, global.select);\n          global.clipboardAction = mod.exports;\n      }\n  })(this, function (module, _select) {\n      //'use strict';\n  \n      var _select2 = _interopRequireDefault(_select);\n  \n      function _interopRequireDefault(obj) {\n          return obj && obj.__esModule ? obj : {\n              default: obj\n          };\n      }\n  \n      var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n          return typeof obj;\n      } : function (obj) {\n          return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n  \n      function _classCallCheck(instance, Constructor) {\n          if (!(instance instanceof Constructor)) {\n              throw new TypeError(\"Cannot call a class as a function\");\n          }\n      }\n  \n      var _createClass = function () {\n          function defineProperties(target, props) {\n              for (var i = 0; i < props.length; i++) {\n                  var descriptor = props[i];\n                  descriptor.enumerable = descriptor.enumerable || false;\n                  descriptor.configurable = true;\n                  if (\"value\" in descriptor) descriptor.writable = true;\n                  Object.defineProperty(target, descriptor.key, descriptor);\n              }\n          }\n  \n          return function (Constructor, protoProps, staticProps) {\n              if (protoProps) defineProperties(Constructor.prototype, protoProps);\n              if (staticProps) defineProperties(Constructor, staticProps);\n              return Constructor;\n          };\n      }();\n  \n      var ClipboardAction = function () {\n          /**\n           * @param {Object} options\n           */\n          function ClipboardAction(options) {\n              _classCallCheck(this, ClipboardAction);\n  \n              this.resolveOptions(options);\n              this.initSelection();\n          }\n  \n          /**\n           * Defines base properties passed from constructor.\n           * @param {Object} options\n           */\n  \n  \n          _createClass(ClipboardAction, [{\n              key: 'resolveOptions',\n              value: function resolveOptions() {\n                  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  \n                  this.action = options.action;\n                  this.emitter = options.emitter;\n                  this.target = options.target;\n                  this.text = options.text;\n                  this.trigger = options.trigger;\n  \n                  this.selectedText = '';\n              }\n          }, {\n              key: 'initSelection',\n              value: function initSelection() {\n                  if (this.text) {\n                      this.selectFake();\n                  } else if (this.target) {\n                      this.selectTarget();\n                  }\n              }\n          }, {\n              key: 'selectFake',\n              value: function selectFake() {\n                  var _this = this;\n  \n                  var isRTL = document.documentElement.getAttribute('dir') == 'rtl';\n  \n                  this.removeFake();\n  \n                  this.fakeHandlerCallback = function () {\n                      return _this.removeFake();\n                  };\n                  this.fakeHandler = document.body.addEventListener('click', this.fakeHandlerCallback) || true;\n  \n                  this.fakeElem = document.createElement('textarea');\n                  // Prevent zooming on iOS\n                  this.fakeElem.style.fontSize = '12pt';\n                  // Reset box model\n                  this.fakeElem.style.border = '0';\n                  this.fakeElem.style.padding = '0';\n                  this.fakeElem.style.margin = '0';\n                  // Move element out of screen horizontally\n                  this.fakeElem.style.position = 'absolute';\n                  this.fakeElem.style[isRTL ? 'right' : 'left'] = '-9999px';\n                  // Move element to the same position vertically\n                  var yPosition = window.pageYOffset || document.documentElement.scrollTop;\n                  this.fakeElem.style.top = yPosition + 'px';\n  \n                  this.fakeElem.setAttribute('readonly', '');\n                  this.fakeElem.value = this.text;\n  \n                  document.body.appendChild(this.fakeElem);\n  \n                  this.selectedText = (0, _select2.default)(this.fakeElem);\n                  this.copyText();\n              }\n          }, {\n              key: 'removeFake',\n              value: function removeFake() {\n                  if (this.fakeHandler) {\n                      document.body.removeEventListener('click', this.fakeHandlerCallback);\n                      this.fakeHandler = null;\n                      this.fakeHandlerCallback = null;\n                  }\n  \n                  if (this.fakeElem) {\n                      document.body.removeChild(this.fakeElem);\n                      this.fakeElem = null;\n                  }\n              }\n          }, {\n              key: 'selectTarget',\n              value: function selectTarget() {\n                  this.selectedText = (0, _select2.default)(this.target);\n                  this.copyText();\n              }\n          }, {\n              key: 'copyText',\n              value: function copyText() {\n                  var succeeded = void 0;\n  \n                  try {\n                      succeeded = document.execCommand(this.action);\n                  } catch (err) {\n                      succeeded = false;\n                  }\n  \n                  this.handleResult(succeeded);\n              }\n          }, {\n              key: 'handleResult',\n              value: function handleResult(succeeded) {\n                  this.emitter.emit(succeeded ? 'success' : 'error', {\n                      action: this.action,\n                      text: this.selectedText,\n                      trigger: this.trigger,\n                      clearSelection: this.clearSelection.bind(this)\n                  });\n              }\n          }, {\n              key: 'clearSelection',\n              value: function clearSelection() {\n                  if (this.target) {\n                      this.target.blur();\n                  }\n  \n                  window.getSelection().removeAllRanges();\n              }\n          }, {\n              key: 'destroy',\n              value: function destroy() {\n                  this.removeFake();\n              }\n          }, {\n              key: 'action',\n              set: function set() {\n                  var action = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'copy';\n  \n                  this._action = action;\n  \n                  if (this._action !== 'copy' && this._action !== 'cut') {\n                      throw new Error('Invalid \"action\" value, use either \"copy\" or \"cut\"');\n                  }\n              },\n              get: function get() {\n                  return this._action;\n              }\n          }, {\n              key: 'target',\n              set: function set(target) {\n                  if (target !== undefined) {\n                      if (target && (typeof target === 'undefined' ? 'undefined' : _typeof(target)) === 'object' && target.nodeType === 1) {\n                          if (this.action === 'copy' && target.hasAttribute('disabled')) {\n                              throw new Error('Invalid \"target\" attribute. Please use \"readonly\" instead of \"disabled\" attribute');\n                          }\n  \n                          if (this.action === 'cut' && (target.hasAttribute('readonly') || target.hasAttribute('disabled'))) {\n                              throw new Error('Invalid \"target\" attribute. You can\\'t cut text from elements with \"readonly\" or \"disabled\" attributes');\n                          }\n  \n                          this._target = target;\n                      } else {\n                          throw new Error('Invalid \"target\" value, use a valid Element');\n                      }\n                  }\n              },\n              get: function get() {\n                  return this._target;\n              }\n          }]);\n  \n          return ClipboardAction;\n      }();\n  \n      module.exports = ClipboardAction;\n  });\n  \n  },{\"select\":5}],8:[function(require,module,exports){\n  (function (global, factory) {\n      if (typeof define === \"function\" && define.amd) {\n          define(['module', './clipboard-action', 'tiny-emitter', 'good-listener'], factory);\n      } else if (typeof exports !== \"undefined\") {\n          factory(module, require('./clipboard-action'), require('tiny-emitter'), require('good-listener'));\n      } else {\n          var mod = {\n              exports: {}\n          };\n          factory(mod, global.clipboardAction, global.tinyEmitter, global.goodListener);\n          global.clipboard = mod.exports;\n      }\n  })(this, function (module, _clipboardAction, _tinyEmitter, _goodListener) {\n      //'use strict';\n  \n      var _clipboardAction2 = _interopRequireDefault(_clipboardAction);\n  \n      var _tinyEmitter2 = _interopRequireDefault(_tinyEmitter);\n  \n      var _goodListener2 = _interopRequireDefault(_goodListener);\n  \n      function _interopRequireDefault(obj) {\n          return obj && obj.__esModule ? obj : {\n              default: obj\n          };\n      }\n  \n      function _classCallCheck(instance, Constructor) {\n          if (!(instance instanceof Constructor)) {\n              throw new TypeError(\"Cannot call a class as a function\");\n          }\n      }\n  \n      var _createClass = function () {\n          function defineProperties(target, props) {\n              for (var i = 0; i < props.length; i++) {\n                  var descriptor = props[i];\n                  descriptor.enumerable = descriptor.enumerable || false;\n                  descriptor.configurable = true;\n                  if (\"value\" in descriptor) descriptor.writable = true;\n                  Object.defineProperty(target, descriptor.key, descriptor);\n              }\n          }\n  \n          return function (Constructor, protoProps, staticProps) {\n              if (protoProps) defineProperties(Constructor.prototype, protoProps);\n              if (staticProps) defineProperties(Constructor, staticProps);\n              return Constructor;\n          };\n      }();\n  \n      function _possibleConstructorReturn(self, call) {\n          if (!self) {\n              throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n          }\n  \n          return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n      }\n  \n      function _inherits(subClass, superClass) {\n          if (typeof superClass !== \"function\" && superClass !== null) {\n              throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n          }\n  \n          subClass.prototype = Object.create(superClass && superClass.prototype, {\n              constructor: {\n                  value: subClass,\n                  enumerable: false,\n                  writable: true,\n                  configurable: true\n              }\n          });\n          if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n      }\n  \n      var Clipboard = function (_Emitter) {\n          _inherits(Clipboard, _Emitter);\n  \n          /**\n           * @param {String|HTMLElement|HTMLCollection|NodeList} trigger\n           * @param {Object} options\n           */\n          function Clipboard(trigger, options) {\n              _classCallCheck(this, Clipboard);\n  \n              var _this = _possibleConstructorReturn(this, (Clipboard.__proto__ || Object.getPrototypeOf(Clipboard)).call(this));\n  \n              _this.resolveOptions(options);\n              _this.listenClick(trigger);\n              return _this;\n          }\n  \n          /**\n           * Defines if attributes would be resolved using internal setter functions\n           * or custom functions that were passed in the constructor.\n           * @param {Object} options\n           */\n  \n  \n          _createClass(Clipboard, [{\n              key: 'resolveOptions',\n              value: function resolveOptions() {\n                  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  \n                  this.action = typeof options.action === 'function' ? options.action : this.defaultAction;\n                  this.target = typeof options.target === 'function' ? options.target : this.defaultTarget;\n                  this.text = typeof options.text === 'function' ? options.text : this.defaultText;\n              }\n          }, {\n              key: 'listenClick',\n              value: function listenClick(trigger) {\n                  var _this2 = this;\n  \n                  this.listener = (0, _goodListener2.default)(trigger, 'click', function (e) {\n                      return _this2.onClick(e);\n                  });\n              }\n          }, {\n              key: 'onClick',\n              value: function onClick(e) {\n                  var trigger = e.delegateTarget || e.currentTarget;\n  \n                  if (this.clipboardAction) {\n                      this.clipboardAction = null;\n                  }\n  \n                  this.clipboardAction = new _clipboardAction2.default({\n                      action: this.action(trigger),\n                      target: this.target(trigger),\n                      text: this.text(trigger),\n                      trigger: trigger,\n                      emitter: this\n                  });\n              }\n          }, {\n              key: 'defaultAction',\n              value: function defaultAction(trigger) {\n                  return getAttributeValue('action', trigger);\n              }\n          }, {\n              key: 'defaultTarget',\n              value: function defaultTarget(trigger) {\n                  var selector = getAttributeValue('target', trigger);\n  \n                  if (selector) {\n                      return document.querySelector(selector);\n                  }\n              }\n          }, {\n              key: 'defaultText',\n              value: function defaultText(trigger) {\n                  return getAttributeValue('text', trigger);\n              }\n          }, {\n              key: 'destroy',\n              value: function destroy() {\n                  this.listener.destroy();\n  \n                  if (this.clipboardAction) {\n                      this.clipboardAction.destroy();\n                      this.clipboardAction = null;\n                  }\n              }\n          }], [{\n              key: 'isSupported',\n              value: function isSupported() {\n                  var action = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ['copy', 'cut'];\n  \n                  var actions = typeof action === 'string' ? [action] : action;\n                  var support = !!document.queryCommandSupported;\n  \n                  actions.forEach(function (action) {\n                      support = support && !!document.queryCommandSupported(action);\n                  });\n  \n                  return support;\n              }\n          }]);\n  \n          return Clipboard;\n      }(_tinyEmitter2.default);\n  \n      /**\n       * Helper function to retrieve attribute value.\n       * @param {String} suffix\n       * @param {Element} element\n       */\n      function getAttributeValue(suffix, element) {\n          var attribute = 'data-clipboard-' + suffix;\n  \n          if (!element.hasAttribute(attribute)) {\n              return;\n          }\n  \n          return element.getAttribute(attribute);\n      }\n  \n      module.exports = Clipboard;\n  });\n  \n  },{\"./clipboard-action\":7,\"good-listener\":4,\"tiny-emitter\":6}]},{},[8])(8)\n  });\nvar Article = {\n\tTopBinder: [],\n\tInit: function() { \n\n\t\tArticle.SetScreen();\n\n\t\tvar articleText = $(\"#articleText\"),\n\t\t\tarticleTextP = articleText.offset(),\n\t\t\tarticleMenuW = $(\".articleMenu\").width(),\n\t\t\tp = $(\".articleSection\",articleText);\n\n\t\t$(\".ModalTables\").on(\"shown.bs.modal\",function() {\n\t\t\tvar modalBody = $(\".modal-body\",this),\n\t\t\t\ttable = $(\"table\",modalBody),\n\t\t\t\tmodalBodyWidth = modalBody.outerWidth(),\n\t\t\t\ttableWidth = table.outerWidth();\n\n\t\t\tif(!modalBody.is(\"cached\")) {\n\t\t\t\ttable.addClass(\"table\");\n\n\t\t\t\tif(tableWidth > modalBodyWidth) {\n\t\t\t\t\ttable.addClass(\"autoWidth\");\n\t\t\t\t} else {\n\t\t\t\t\ttable.removeClass(\"autoWidth\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tmodalBody.addClass(\"cached\");\n\t\t});\n\n\t\t\n\t\t/*\n\t\tEste trecho foi modificado para exibir os tooltips em modo leitura.\n\t\tAinda em fase de testes.\n\n\t\tUpdate: Foi comentado para voltar ao modo padrão e tentar uma nova abordagem sem gerar listas de referencias duplicadas\n\t\t*/\n\t\tvar RefToolTip = {\n\n            open: function(t) {\n\n                var s = $(\".xref\",t),\n                    d = s.next(\"span:eq(0)\")\n                    p = t.position(),\n                    supHeight = s.outerHeight(),\n                    supPositionLeft = p.left,\n                    li = t.closest(\"li\"),\n                    refTxt = s.parent().find(\"a\").data(\"ref\");\n                    s.parent().append(\"<span class='refCtt closed'><span>\" + refTxt + \"</span></span>\");\n\n                    console.log('cliquei');\n\n                if(li.length > 0)\n                    li.addClass(\"zindexFix\");\n                    s.parent().find(\".refCtt\").removeClass(\"closed\").addClass(\"opened\").css({\n                    \"left\": (supPositionLeft > 300) ? (-supPositionLeft/3) : 0\n                }).fadeIn(\"fast\");\n\n            },\n            close: function(t) {\n\n                var s = $(\".xref\",t),\n                    d = s.next(\"span:eq(0)\"),\n                    li = t.closest(\"li\");\n\n                if(li.length > 0)\n                    li.removeClass(\"zindexFix\");\n                    s.parent().find(\".refCtt\").removeClass(\"opened\").addClass(\"closed\");\n                    s.parent().find(\".refCtt\").remove();\n            }\n        };\n\t  \n\t\t$(\".ref\").on(\"mouseenter mouseleave\",function(e) {\n            \n            var t = $(this);\n\n            e.preventDefault();\n\n            if(e.type === \"mouseenter\") {\n               RefToolTip.open(t);\n            } else {\n               RefToolTip.close(t);\n            }\n            \n        });\n\t\t\n\t\t// Tablet or Mobile\n\t\t/*\n\t\tif(Article.IsTablet || Article.IsMobile) {\n\n\t\t\tvar isTooltipOpen = false;\n\t\t\tvar actualOpened = null;\n\n\t\t\t$('html').on('touchstart', function(e) {\n\n\t\t\t\t$(\".ref\").each(function() {\n\n\t\t\t\t\tvar t = $(this);\n\t\t\t\t\tRefToolTip.close(t);\n\n\t\t\t\t\tisTooltipOpen = false;\n\t\t\t\t});\n\n\t\t\t});\n\n\t\t\t$(\".ref\").on('touchstart',function(e) {\n\t\t\t    e.stopPropagation();\n\n\t\t\t  \tvar t = $(this);\n\n\t\t\t  \tif(actualOpened !== null && t.get(0) === actualOpened.get(0)) {\n\n\t\t\t  \t\tif(!isTooltipOpen) {\n\n\t\t\t\t\t\tactualOpened = t;\n\n\t\t\t\t\t\tRefToolTip.open(t);\n\t\t  \t\t\t    isTooltipOpen = true;\n\n\t\t\t\t\t}\n\n\t\t\t  \t} else {\n\n\t\t\t  \t\tif(actualOpened !== null) RefToolTip.close(actualOpened);\n\n\t\t\t\t\tactualOpened = t;\n\n\t\t\t\t\tRefToolTip.open(t);\n\t\t  \t\t\tisTooltipOpen = true;\n\t\t\t  \t}\n\n\t\t\t});\n\n\t\t    $(\"ul.floatingMenuMobile\").on('click', function() {\n\n\t\t    \t$(this).find('.fm-button-child').each(function() {\n\t\t    \t\t$(this).addClass('tooltip-mobile-on');\n\t\t    \t});\n\n\t\t    });\n\n\n\n\t\t// Desktop\n\t\t} else {\n\n\t\t\t$(\".ref\").on(\"mouseenter mouseleave\",function(e) {\n\t\t\t\te.preventDefault();\n\n\t\t\t\tvar t = $(this);\n\n\t\t\t\tif(e.type === \"mouseenter\") {\n\n\t\t\t\t\tRefToolTip.open(t);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tRefToolTip.close(t);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t*/\n\n\n\t\t$(\".thumb\").on(\"mouseenter mouseleave\",function(e) {\n\t\t\tvar p = $(this).parent().parent().find(\".preview\");\n\t\t\tif(e.type == \"mouseenter\") {\n\t\t\t\tp.fadeIn(\"fast\");\n\t\t\t} else if(e.type == \"mouseleave\") {\n\t\t\t\tp.fadeOut(\"fast\");\n\t\t\t}\n\t\t});\n\n\t\t$(\".ModalTables\").on(\"shown.bs.modal\",function() {\n\t\t\tvar check = $(\"table td[colspan], table td[rowspan]\",this).length;\n\t\t\tif(check == 0)\n\t\t\t\t$(\"table\",this).addClass(\"table-hover\");\n\t\t});\n\n\t\t$(\".collapseTitle\").on(\"click\",function() {\n\t\t\tvar ctt = $(this).next(),\n\t\t\t\tico = $(this).find(\".collapseIcon\");\n\n\t\t\tif(ctt.is(\":visible\")) {\n\t\t\t\tctt.slideUp(\"fast\");\n\t\t\t\tico.removeClass(\"opened\");\n\t\t\t} else {\n\t\t\t\tctt.slideDown(\"fast\");\n\t\t\t\tico.addClass(\"opened\");\n\t\t\t}\n\t\t});\n\n\t\t$(\".expandReduceText\").on(\"click\",function(e) {\n\t\t\te.preventDefault();\n\t\t\tvar ref = $(\"#articleText .ref\"),\n\t\t\t\ttxt = $(\"#articleText .text\"),\n\t\t\t\ts = $(this).data(\"expandreducetext\"),\n\t\t\t\ttw = $(this).data(\"defaultwidth\");\n\n\t\t\tif(typeof tw == \"undefined\")\n\t\t\t\t$(this).data(\"defaultwidth\",txt.outerWidth());\n\n\t\t\tif(s == true) {\n\t\t\t\tref.hide();\n\t\t\t\ttxt.outerWidth(\"100%\");\n\n\t\t\t\t$(this).data(\"expandreducetext\",false);\n\t\t\t} else {\n\t\t\t\ttxt.width(\"\");\n\t\t\t\tref.show();\n\n\t\t\t\t$(this).data(\"expandreducetext\",true);\n\t\t\t}\n\n\t\t\tvar t = $(window).scrollTop();\n\t\t\tsetTimeout(function() {\n\t\t\t\tArticle.ArticleStructureBuilder();\n\t\t\t\tArticle.ArticleStructureSelect(t);\n\t\t\t},100);\n\n\n\t\t});\n\n\t\t$(\".articleTxt .xref:not(.big)\").on(\"click\",function() {\n\t\t\tvar c = $(this).text(),\n\t\t\t\td = $(\".ref-list\");\n\n\t\t\tif(c.indexOf(\",\") == -1) {\n\t\t\t\tparseInt(c);\n\t\t\t\tc--;\n\t\t\t} else {\n\t\t\t\tc = c.split(\",\");\n\t\t\t\tc = c[0];\n\n\t\t\t\tparseInt(c);\n\t\t\t\tc--;\n\t\t\t}\n\t\t});\n\n\n\t\tArticle.ArticleStructureBuilder();\n\n\t\tarticleTextP.top = articleTextP.top - 25;\n\t\tvar articleTextH = articleText.outerHeight(),\n\t\t\tarticleMenuH = $(\".articleMenu\").height();\n\n\t\t\thbodyText = $(\".articleTxt\").height();\n\t\t\tvbodyText = hbodyText + 100  + \"px\";\n\t\t\tvbodyTextMobile = hbodyText + 150  + \"px\";\n\n\t\twindow.setTimeout(function() {\n\t\t\tarticleMenuH = $(\".articleMenu\").height();\n\t\t},200);\n\n\t\tif(hbodyText < 750){\n\t\t\t$(\".floatingMenu, .floatingMenuItem, .floatingMenuMobile\").css({\n\t\t\t\t\"bottom\": \"auto\",\n\t\t\t\t\"top\": Article.IsTablet ? vbodyTextMobile : vbodyText\n\t\t\t});\n\t\t}\n\t\twindow.setTimeout(function() {\n\t\t\t$(\".floatingMenu, .floatingMenuItem, .floatingMenuMobile\").css({\n\t\t\t\t\"opacity\": \"1\"\n\t\t\t});\n\t\t},200);\n\n\t\t$(window).scroll(function() {\n\t\t\tvar t = $(window).scrollTop();\n\n\t\t\t/*\n\t\t\tComponente menu flutuante\n\t\t\t\n\t\t\tif(Article.isScrolledIntoView('.floatingMenuCtt')){\n\n\t\t\t\t$('.floatingMenuItem').css({position: 'absolute'});\n\t\t\t\t$('.floatingMenu').css({position: 'absolute'});\n\n\t\t\t}else{\n\n\t\t\t\t$('.floatingMenuItem').css({position: 'fixed'});\n\t\t\t\t$('.floatingMenu').css({position: 'fixed'});\n\t\t\t}\n\t\t\t*/\n\n\t\t\tif(t > articleTextP.top) {\n\n\t\t\t\t$(\".articleMenu\").addClass(\"fixed\").width(articleMenuW);\n\n\t\t\t\tif(t > (articleTextH + articleTextP.top - articleMenuH - 46)) {\n\t\t\t\t\t$(\".articleMenu\").addClass(\"fixedBottom\");\n\n\t\t\t\t} else {\n\t\t\t\t\t$(\".articleMenu\").removeClass(\"fixedBottom\");\n\t\t\t\t}\n\t\t\t} else\n\t\t\t\t$(\".articleMenu\").removeClass(\"fixed\");\n\n\t\t\tArticle.ArticleStructureSelect(t);\n\n\t\t\t$(\".alternativeHeader\").stop(false,false);\n\t\t});\n\n\t\t\n\n\n\t\tif(window.location.hash != \"\") {\n\t\t\tvar hash = window.location.hash,\n\t\t\t\tscrollY = window.scrollY;\n\n\t\t\t$(hash).modal(\"toggle\").on(\"hidden.bs.modal\",function() {\n    \t\t\twindow.location.hash = '';\n\n    \t\t\t$(\"body,html\").scrollTop(scrollY);\n\t\t\t});\n\t\t}\n\n\t\t$(\"[data-toggle='modal']\").on(\"click\",function() {\n\t\t\tvar t = $(this),\n\t\t\t\ttarget = t.data(\"target\"),\n\t\t\t\tscrollY = window.scrollY;\n\n\t\t\tif(target != \"undefined\" || target != \"\")\n\t\t\t\twindow.location.hash = target;\n\n\t\t\t$(target).on(\"hidden.bs.modal\",function () {\n        \t\twindow.location.hash = '';\n\n        \t\t$(\"body,html\").scrollTop(scrollY);\n    \t\t});\n\t\t});\n\n\t\tvar downloadOpt = $(\".downloadOptions li.group\"),\n\t\t\tdownloadOptW = 100/downloadOpt.length;\n\n\t\tdownloadOpt.css(\"width\",downloadOptW+\"%\");\n\n\t\tArticle.fechaAutores();\n\n\t\t// Global variable shared on mouseenter event and clipboard\n\t\tvar hasEncodedTheURL = false;\n\n\t\t$('.short-link').mouseenter(function(event) {\n\n\t\t\t// Verify if the ajax request has already been made\n\t\t\tif(!hasEncodedTheURL) {\n\n\t\t\t\t\n\t\t\t\tvar urlAtual = \"http://www.scielo.br\";\n\n\t\t\t\tif(urlAtual.indexOf('localhost') !== -1) { // Localhost\n\t\t\t\t\tvar urlAtual = \"http://www.scielo.br\";\n\t\t\t\t}\n\n\t        \t$.ajax({\n\t\t            type: \"GET\",\n\t\t            async: false,\n\t\t            url: 'http://ref.scielo.org/api/v1/shorten',\n\t\t            data: 'url=' + encodeURI(urlAtual),\n\t\t            dataType: \"jsonp\",\n\t\t            success: function(data) {\n\t\t            \tresult = data;\n\t\t            \thasEncodedTheURL = true;\n\t            \t}\n\t            \t//error:\n\t        \t});\n\t\t\t}\n\n\t    });\n\n\t\tvar clipboard = new Clipboard('.short-link', {\n        text: function(trigger) {\n            \treturn result;\n            }\n        });\n\n\t    clipboard.on('success', function(e) {\n\n\t        console.log('Sucess: ' + e);\n\n        \t//var t = $(e.trigger);\n\t\t\tvar t = document.querySelector('a.copyLink');\n\t\t\tt.addClass(\"copyFeedback\");\n\n\t\t\tsetTimeout(function() {\n\t\t\t\tt.removeClass(\"copyFeedback\");\n\t\t\t},2000);\n\t    });\n\n\t    clipboard.on('error', function(e) {\n\t    \tconsole.log('Error: ' + e);\n\n\t    \tvar t = $(e.trigger);\n\t\t\tt.addClass(\"copyFeedbackError\");\n\n\t\t\tsetTimeout(function() {\n\t\t\t\tt.removeClass(\"copyFeedbackError\");\n\t\t\t},2000);\n\t    });\n\n\t\tthis.CopyLink();\n\n\t    $(\"ul.floatingMenuMobile\").on('click', function() {\n\n\t    \t$(this).find('.fm-button-child').each(function() {\n\t    \t\t$(this).addClass('tooltip-mobile-on');\n\t    \t});\n\t    });\n\n\t    var isFloatingMenuMobileClosed = true;\n\n\t    $(\"ul.floatingMenuMobile\").on('focusout click', function(e) {\n\n\t    \tif(isFloatingMenuMobileClosed) { // Open menu\n\n\t    \t\tif(e.type === 'focusout') {\n\t    \t\t\treturn;\n\t    \t\t}\n\n\t    \t\tisFloatingMenuMobileClosed = false;\n\t    \t\t$(this).find('.fm-list').children('li').removeAttr('style');\n\t    \t\t$(this).find('.fm-button-main').addClass('fm-button-main-mobile-open');\n\n\t    \t} else {\n\n\t    \t\tisFloatingMenuMobileClosed = true; // Close menu\n\t    \t\t\n\t    \t\t$(this).find('.fm-list').children('li').css({'opacity': 0});\n\t    \t\t$(this).find('.fm-button-main').removeClass('fm-button-main-mobile-open');\n\n\t    \t}\n\t    });\n\t},\n\n\tisScrolledIntoView: function(elem){\n\t    var docViewTop = $(window).scrollTop();\n\t    var docViewBottom = docViewTop + $(window).height();\n\t    var elemTop = $(elem).offset().top;\n\t    var elemBottom = elemTop + $(elem).height();\n\t    return ((elemBottom <= docViewBottom) && (elemTop >= docViewTop));\n\t},\n\n\tArticleStructureBuilder: function() {\n\t\tvar structure = $(\".articleMenu\"),\n\t\t\tcontent = $(\"#articleText .articleSection\"),\n\t\t\tidx = 0,\n\t\t\tctt = '';\n\n\t\tArticle.TopBinder = [];\n\n\t\tcontent.each(function() {\n\t\t\tvar t = $(this).data(\"anchor\"),\n\t\t\t\th = $(this).find(\".articleSectionTitle\"),\n\t\t\t\toffset = $(this).offset();\n\n\t\t\tif($(this).find(\"a[name='articleSection\"+idx+\"']\").length == 0) {\n\t\t\t\t$(this).prepend(\"<a name='articleSection\"+idx+\"'></a>\");\n\t\t\t}\n\n\t\t\tif(idx == 0)\n\t\t\t\tArticle.TopBinder.push(0);\n\t\t\telse\n\t\t\t\tArticle.TopBinder.push(offset.top);\n\n\t\t\tif(typeof t == \"undefined\") return true;\n\n\t\t\tctt += '<li '+(idx == 0 ? 'class=\"selected\"' : '')+'>';\n\t\t\tctt += '\t<a href=\"#articleSection'+idx+'\">'+t+'</a>';\n\n\t\t\tif(h.length > 1) {\n\t\t\t\tvar iidx = 0;\n\t\t\t\tctt += '<ul>';\n\t\t\t\th.each(function() {\n\t\t\t\t\tvar ooffset = $(this).offset();\n\t\t\t\t\tArticle.TopBinder.push(ooffset.top);\n\n\t\t\t\t\tif($(this).prev(\"a[name='as\"+idx+\"-heading\"+iidx+\"']\").length == 0) {\n\t\t\t\t\t\t$(this).before(\"<a name='as\"+idx+\"-heading\"+iidx+\"'></a>\");\n\t\t\t\t\t}\n\n\t\t\t\t\tctt += '<li>';\n\t\t\t\t\tctt += '\t<a href=\"#as'+idx+'-heading'+iidx+'\">'+$(this).text()+'</a>';\n\t\t\t\t\tctt += '</li>';\n\n\t\t\t\t\tiidx++;\n\t\t\t\t});\n\t\t\t\tctt += '</ul>';\n\t\t\t}\n\t\t\tctt += '</li>';\n\n\t\t\tidx++;\n\t\t});\n\n\t\t// ctt+='<li class=\"floatingMenuCtt\">colocar botao aqui</li>';\n\n\t\tstructure.html(ctt);\n\n\t\t$(\"a\",structure).on(\"click\",function(e) {\n\t\t\te.preventDefault();\n\n\t\t\tvar d = $(this).attr(\"href\");\n\t\t\td = d.replace(\"#\",\"\");\n\n\t\t\tvar p = $(\"a[name=\"+d+\"]\").offset();\n\n\t\t\t$(\"html,body\").animate({\n\t\t\t\tscrollTop: (p.top-60)\n\t\t\t},500);\n\t\t});\n\t},\n\tArticleStructureSelect: function(pos) {\n\t\tvar structure = $(\".articleMenu\"),\n\t\t\tidx = 0;\n\t\tfor(var i=0,l=Article.TopBinder.length;i<l;i++) {\n\t\t\tif(i == l-1 && pos >= Article.TopBinder[i]-100) {\n\t\t\t\tstructure.find(\"li\").removeClass(\"selected\");\n\t\t\t\tstructure.find(\"li:eq(\"+i+\")\").addClass(\"selected\");\n\t\t\t\tbreak;\n\t\t\t} else {\n\t\t\t\tif(pos <= (Article.TopBinder[i]-100)) {\n\t\t\t\t\tstructure.find(\"li\").removeClass(\"selected\");\n\t\t\t\t\tstructure.find(\"li:eq(\"+(i-1)+\")\").addClass(\"selected\");\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tBindings: function(ctn) {\n\t\tif(typeof ctn == \"undefined\") ctn = \".article\";\n\t},\n\tfechaAutores: function() {\n\n\t\tvar autoresGrupo = $(\".contribGroup\");\n\t\tvar autores = $(\".contribGroup .dropdown\");\n\t\tvar qtdAutores = autores.length;\n\n\t\tif(qtdAutores >= 10) {\n\n\t\t\tvar AuthorsQTDTooltip = null;\n\n\t\t\tvar btnSobre = $(\".outlineFadeLink\");\n\t\t\tvar primeiro = autores[0];\n\t\t\tvar ultimo = autores[qtdAutores -1];\n\n\t\t\t// Code added to control authors quantity tooltip\n\t\t\tvar authorsQTDToShowInsideBracktes = qtdAutores - 2;\n\n\t\t\tvar linkToggleOn = $('<a data-toggle=\"tooltip\" data-placement=\"top\" title=\"+'+authorsQTDToShowInsideBracktes+'\"></a>');\n\n\t\t\tlinkToggleOn.text(\"[...]\");\n\t\t\t//style\n\t\t\tlinkToggleOn.css({ padding : \"10px\" , cursor : \"pointer\" });\n\n\t\t\tvar boxToggleOff = $('<div></div>');\n\t\t\tvar linkToggleOff = $('<a></a>');\n\n\t\t\tlinkToggleOff.addClass(\"btn-fechar\");\n\n\t\t\tvar spanOff = $('<span></span>');\n\t\t\tspanOff.addClass(\"sci-ico-floatingMenuClose\");\n\n\t\t\tlinkToggleOff.append(spanOff);\n\t\t\tboxToggleOff.append(linkToggleOff);\n\n\t\t\tvar autoresResumo = $('<div></div>');\n\t\t\tautoresResumo.append(primeiro);\n\t\t\tautoresResumo.append(linkToggleOn);\n\t\t\tautoresResumo.append(ultimo);\n\t\t\tautoresResumo.append(btnSobre);\n\n\t\t\t//substitui o conteudo pelo resumo\n\t\t\tautoresGrupo.text(\"\");\n\t\t\tautoresGrupo.append(autoresResumo);\n\n\t\t\tlinkToggleOn.on(\"click\",function() {\n\t\t\t\tAuthorsQTDTooltip.tooltip('disable')\n\n\t\t\t\tautoresGrupo.textContent = \"\";\n\t\t\t\tfor (var i = 0; i < qtdAutores; i++){\n\t\t\t\t\tautoresGrupo.append(autores[i]);\n\t\t\t\t}\n\n\t\t\t\tautoresGrupo.append(btnSobre);\n\t\t\t\tautoresGrupo.append(boxToggleOff);\n\t\t\t});\n\n\t\t\tlinkToggleOff.on(\"click\",function() {\n\t\t\t\tAuthorsQTDTooltip.tooltip('enable');\n\n\t\t\t\tArticle.fechaAutores();\n\t\t\t});\n\n\t\t\t// Initialize tooltip\n\t\t\tAuthorsQTDTooltip = $('[data-toggle=\"tooltip\"]').tooltip();\n\t\t}\n\t\tautoresGrupo.css(\"opacity\",\"1\");\n\n\t},\n\tIsMobile: false,\n\tIsTablet: false,\n\tIsTabletPortrait: false,\n\tIsDesktop: false,\n\tIsHD: false,\n\tisOldIE: false,\n\tDetectMobile: function(userAgent) {\n\t\tvar mobile = {};\n\n\t\t// valores do http://detectmobilebrowsers.com/\n\t    mobile.detectMobileBrowsers = {\n\t        fullPattern: /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i,\n\t        shortPattern: /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i\n\t    };\n\n\t    return mobile.detectMobileBrowsers.fullPattern.test(userAgent) ||\n        \tmobile.detectMobileBrowsers.shortPattern.test(userAgent.substr(0,4));\n\t},\n\tDetectTablet: function(userAgent) {\n\t\tvar tablets = {};\n\n\t\t// valores do http://detectmobilebrowsers.com/\n\t    tablets.detectMobileBrowsers = {\n\t        tabletPattern: /android|ipad|playbook|silk/i\n\t    };\n\n\t\treturn tablets.detectMobileBrowsers.tabletPattern.test(userAgent);\n\t},\n\tSetScreen: function() {\n\t\tvar w = $(window).innerWidth(),\n\t\t\torientation = window.matchMedia(\"(orientation: portrait)\").matches;\n\n\t\tif(w > 990) Article.IsDesktop = true;\n\t\tif(w > 1206) Article.IsHD = true;\n\n\t\tif(Article.DetectMobile(navigator.userAgent))\n\t\t\tArticle.IsMobile = true;\n\n\t\tif(Article.DetectTablet(navigator.userAgent)) {\n\t\t\tArticle.IsTablet = true;\n\n\t\t\tif(orientation)\n\t\t\t\tArticle.IsTabletPortrait = true;\n\t\t\telse\n\t\t\t\tArticle.IsTabletPortrait = false;\n\n\t\t\twindow.addEventListener(\"orientationchange\", function() {\n\t\t\t    if(screen.orientation.angle == 0)\n\t\t\t    \tArticle.IsTabletPortrait = true;\n\t\t\t    else\n\t\t\t    \tArticle.IsTabletPortrait = false;\n\t\t\t});\n\t\t}\n\n\t\tif(navigator.appVersion.indexOf(\"MSIE 8\") > -1) {\n\t\t\tArticle.IsMobile = false;\n\t\t\tArticle.IsTablet = false;\n\t\t\tArticle.IsDesktop = true;\n\t\t\tArticle.IsOldIE = true;\n\t\t\tArticle.IsHD = false;\n\t\t}\n\t},\n\tCopyLink: function() {\n\t\t/*\n\t\tComportamento com foco em link com a classe copylink\n\t\t- prever elementos diferente de botoes na hora de criar o js genérico\n\t\t*/\n\t\tvar linkTrigger = document.querySelector('a.copyLink');\n\n\t\tlinkTrigger.addEventListener('click', function () {\n\t\t\tthis.classList.add('copyFeedback');\n\n\t\t\tsetTimeout(function() {\n\t\t\t\tlinkTrigger.classList.remove('copyFeedback');\n\t\t\t},2000);\n\t\t});\n\t},\n};\n\n\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n\n    if($(\"body.article\").length) { \n        Article.Init();\n    } \n\t\t \n\n});    "],"file":"scielo-ds.js"}