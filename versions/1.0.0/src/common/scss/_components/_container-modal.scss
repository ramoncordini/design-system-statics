/*
@mixin __modal__base {
    background: $__white;
    border-radius: __remcalc(3);
    border: none;
    @include __shadow--level4;
    max-width: 100%;
    width: 100%;

    @include __breakpoint--xsmall-only {
        margin: 0;
        min-height: 100vh;
        border-radius: 0;
    }

    @include __breakpoint--small {
        max-width: __remcalc(600);
    }
}

@mixin __modal__backdrop {
    background: $_bg__backdrop;
}

@mixin __modal__padding {
    //padding: __remcalc(24);
    padding: $modal-inner-padding - $modal-footer-margin-between / 2;
}

@mixin __modal__title {
    @include __text__title--4;
    color: $__text--light !important;
}  

@mixin __modal__resize($size) {
    @if $size == xlarge {
        max-width: 100% !important;
    } 
    @else if $size == large {
        max-width: 90% !important;
    }
    @else if $size == small {
        max-width: 50% !important;
    }
    @else if $size == tiny {
        max-width: 30% !important;
    }
}

@if $bootstrap {
    .modal {
        &-dialog {
            @include __modal__base;
        }

        &-content {
            border: none;
        }

        &-backdrop {
            @include __modal__backdrop;

            &.show {
                opacity: 1;
            }
        }

        &-header {
            //@include __modal__padding;
            padding: $modal-header-padding;
            //border: none;
            position: relative;

            border: $border-width solid $__border--light;

            @include __on-theme--dark {
                border: $border-width solid $__border--dark; 
            }
            @include __on-theme--light {
                border: $border-width solid $__border--light;
            }
        }

        &-title {
            @include __modal__title;
        }

        &-body {
            @include __modal__padding;
            padding-top: __remcalc(12);
            padding-bottom: __remcalc(12);
        }

        &-footer {
            @include __modal__padding;
            //border: 0;

            .btn {
                margin-bottom: 0;
            }
            &>* {
                margin: .25rem;
            }

            border-top: $border-width solid $__border--light;

            @include __on-theme--dark {
                border-top: $border-width solid $__border--dark; 
            }
            @include __on-theme--light {
                border-top: $border-width solid $__border--light;
            }
        }

        .close {
            @include __alert__close-button;
            margin: 0;
            position: absolute;
        }

        &-xl {
            @include __modal__resize(xlarge);
        }

        &-lg {
            @include __modal__resize(large);
        }

        &-sm {
            @include __modal__resize(small);
        }
    }
}

@if $foundation {
    .reveal {
        @include __modal__padding;
        // fixing padding
        padding-bottom: __remcalc(9);
        @include __modal__base;
        transition: transform .2s ease-out;
        transform: scale(.8);

        &[aria-hidden='false'] {
            transform: none;
        }

        &-overlay {
            @include __modal__backdrop;
        }

        h1 {
            @include __modal__title;
            margin-bottom: __remcalc(36);
            letter-spacing: 0;
        }

        .close-button {
            @include __alert__close-button;
        }

        &.tiny {
            @include __modal__resize(tiny);
        }

        &.large {
            @include __modal__resize(large);
        }

        &.small {
            @include __modal__resize(small);
        }
    }
}

*/


// .modal-open      - body class for killing the scroll
// .modal           - container to scroll within
// .modal-dialog    - positioning shell for the actual modal
// .modal-content   - actual modal w/ bg and corners and stuff


.modal-open {
    // Kill the scroll on the body
    overflow: hidden;
  
    .modal {
      overflow-x: hidden;
      overflow-y: auto;
    }
  }
  
  // Container that the modal scrolls within
  .modal {
    position: fixed;
    top: 0;
    left: 0;
    z-index: $zindex-modal;
    display: none;
    width: 100%;
    height: 100%;
    overflow: hidden;
    // Prevent Chrome on Windows from adding a focus outline. For details, see
    // https://github.com/twbs/bootstrap/pull/10951.
    outline: 0;
    // We deliberately don't use `-webkit-overflow-scrolling: touch;` due to a
    // gnarly iOS Safari bug: https://bugs.webkit.org/show_bug.cgi?id=158342
    // See also https://github.com/twbs/bootstrap/issues/17695
  }
  
  // Shell div to position the modal with bottom padding
  .modal-dialog {
    position: relative;
    width: auto;
    margin: $modal-dialog-margin;
    // allow clicks to pass through for custom click handling to close modal
    pointer-events: none;
  
    // When fading in the modal, animate it to slide down
    .modal.fade & {
      @include transition($modal-transition);
      transform: $modal-fade-transform;
    }
    .modal.show & {
      transform: $modal-show-transform;
    }
  
    // When trying to close, animate focus to scale
    .modal.modal-static & {
      transform: $modal-scale-transform;
    }
  }
  
  .modal-dialog-scrollable {
    height: subtract(100%, $modal-dialog-margin * 2);
  
    .modal-content {
      max-height: 100%;
      overflow: hidden;
    }
  
    .modal-body {
      overflow-y: auto;
    }
  }
  
  .modal-dialog-centered {
    display: flex;
    align-items: center;
    min-height: subtract(100%, $modal-dialog-margin * 2);
  }
  
  // Actual modal
  .modal-content {
    position: relative;
    display: flex;
    flex-direction: column;
    width: 100%; // Ensure `.modal-content` extends the full width of the parent `.modal-dialog`
    // counteract the pointer-events: none; in the .modal-dialog
    color: $modal-content-color;
    pointer-events: auto;
    //background-color: $modal-content-bg;
    background-color: $__bg--light;
    background-clip: padding-box;
    border: $modal-content-border-width solid $modal-content-border-color;
    @include border-radius($modal-content-border-radius);
    @include box-shadow($modal-content-box-shadow-xs);
    // Remove focus outline from opened modal
    outline: 0;

    @include __on-theme--dark {
        border: $border-width solid $__border--dark; 
        background-color: $__bg--dark;
    }

    @include __on-theme--light {
        border: $border-width solid $__border--light;
        background-color: $__bg--light;
    }
  }
  
  // Modal background
  .modal-backdrop {
    position: fixed;
    top: 0;
    left: 0;
    z-index: $zindex-modal-backdrop;
    width: 100vw;
    height: 100vh;
    background-color: $modal-backdrop-bg;
  
    // Fade for backdrop
    &.fade { opacity: 0; }
    &.show { opacity: $modal-backdrop-opacity; }
  }
  
  // Modal header
  // Top section of the modal w/ title and dismiss
  .modal-header {
    display: flex;
    flex-shrink: 0;
    //align-items: center;
    align-items: flex-start;
    justify-content: space-between; // Put modal header elements (title and dismiss) on opposite ends
    padding: $modal-header-padding;
    //border-bottom: $modal-header-border-width solid $modal-header-border-color;
    @include border-top-radius($modal-content-inner-border-radius);
  
    border-bottom: $border-width solid $__border--light;

    @include __on-theme--dark {
        border-bottom: $border-width solid $__border--dark; 
    }
    @include __on-theme--light {
        border-bottom: $border-width solid $__border--light;
    }

    .btn-close {
      padding: ($modal-header-padding-y / 2) ($modal-header-padding-x / 2);
      //margin: ($modal-header-padding-y / -2) ($modal-header-padding-x / -2) ($modal-header-padding-y / -2) auto;
      margin: -2px ($modal-header-padding-x / -2) ($modal-header-padding-y / -2) auto;
      
      background-image: none;
      @include __text__subhead;
      text-align:center;
      position: relative;

        
      &:before{
        font-family: 'Material Icons Outlined';
        content: "close";
        color: $__text--light;
        line-height: 1.8;
        position: absolute;
        top: 0;
        left: 0;
        text-align: center;
        width: 100%;

        @include __on-theme--dark {
            color: $__text--dark;
        }

        @include __on-theme--light {
            color: $__text--light;
        }
      }
    }
  }
  
  // Title text within header
  .modal-title {
    margin-bottom: 0;
    line-height: $modal-title-line-height;

    [class^="material-icons"], [class*=" material-icons"] {
      vertical-align: bottom;
    }
  }
  
  // Modal body
  // Where all modal content resides (sibling of .modal-header and .modal-footer)
  .modal-body {
    position: relative;
    // Enable `flex-grow: 1` so that the body take up as much space as possible
    // when there should be a fixed height on `.modal-dialog`.
    flex: 1 1 auto;
    padding: $modal-inner-padding;
  }
  
  // Footer (for actions)
  .modal-footer {
    display: flex;
    flex-wrap: wrap;
    flex-shrink: 0;
    align-items: center; // vertically center
    justify-content: flex-end; // Right align buttons with flex property because text-align doesn't work on flex items
    padding: $modal-inner-padding - $modal-footer-margin-between / 2;
    //border-top: $modal-footer-border-width solid $modal-footer-border-color;
    @include border-bottom-radius($modal-content-inner-border-radius);

    border-top: $border-width solid $__border--light;

    @include __on-theme--dark {
        border-top: $border-width solid $__border--dark; 
    }
    @include __on-theme--light {
        border-top: $border-width solid $__border--light;
    }
  
    // Place margin between footer elements
    // This solution is far from ideal because of the universal selector usage,
    // but is needed to fix https://github.com/twbs/bootstrap/issues/24800
    > * {
      margin: $modal-footer-margin-between / 2;
    }
  }
  
  // Measure scrollbar width for padding body during modal show/hide
  .modal-scrollbar-measure {
    position: absolute;
    top: -9999px;
    width: 50px;
    height: 50px;
    overflow: scroll;
  }
  
  // Scale up the modal
  @include media-breakpoint-up(sm) {
    // Automatically set modal's width for larger viewports
    .modal-dialog {
      max-width: $modal-md;
      margin: $modal-dialog-margin-y-sm-up auto;
    }
  
    .modal-dialog-scrollable {
      height: subtract(100%, $modal-dialog-margin-y-sm-up * 2);
    }
  
    .modal-dialog-centered {
      min-height: subtract(100%, $modal-dialog-margin-y-sm-up * 2);
    }
  
    .modal-content {
      @include box-shadow($modal-content-box-shadow-sm-up);
    }
  
    .modal-sm { max-width: $modal-sm; }
  }
  
  @include media-breakpoint-up(lg) {
    .modal-lg,
    .modal-xl {
      max-width: $modal-lg;
    }
  }
  
  @include media-breakpoint-up(xl) {
    .modal-xl { max-width: $modal-xl; }
  }
  
  // scss-docs-start modal-fullscreen-loop
  @each $breakpoint in map-keys($grid-breakpoints) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);
    $postfix: if($infix != "", $infix + "-down", "");
  
    @include media-breakpoint-down($breakpoint) {
      .modal-fullscreen#{$postfix} {
        width: 100vw;
        max-width: none;
        height: 100%;
        margin: 0;
  
        .modal-content {
          height: 100%;
          border: 0;
          @include border-radius(0);
        }
  
        .modal-header {
          @include border-radius(0);
        }
  
        .modal-body {
          overflow-y: auto;
        }
  
        .modal-footer {
          @include border-radius(0);
        }
      }
    }
  }
  // scss-docs-end modal-fullscreen-loop
  